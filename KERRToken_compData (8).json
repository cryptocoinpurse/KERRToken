{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"contracts/KERRToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract KERRToken is ERC20, ERC20Burnable, Ownable {\\r\\n    uint256 public constant INITIAL_SUPPLY = 1000000000 * 10 ** 18;  // 1 billion tokens with 18 decimals\\r\\n\\r\\n    constructor() ERC20(\\\"KERRToken\\\", \\\"KERR\\\") Ownable(msg.sender) {\\r\\n        _mint(msg.sender, INITIAL_SUPPLY);\\r\\n    }\\r\\n\\r\\n    function mint(address to, uint256 amount) public onlyOwner {\\r\\n        _mint(to, amount);\\r\\n    }\\r\\n\\r\\n    function burnFromAccount(address from, uint256 amount) public onlyOwner {\\r\\n        _burn(from, amount);\\r\\n    }\\r\\n\\r\\n    // Add a new function or variable declaration here\\r\\n    function getInitialSupply() public pure returns (uint256) {\\r\\n        return INITIAL_SUPPLY;\\r\\n    }\\r\\n}\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys a `value` amount of tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 value) public virtual {\\n        _burn(_msgSender(), value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\\n     * the caller's allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `value`.\\n     */\\n    function burnFrom(address account, uint256 value) public virtual {\\n        _spendAllowance(account, _msgSender(), value);\\n        _burn(account, value);\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"}},\"settings\":{\"optimizer\":{\"enabled\":true,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[],\"evmVersion\":\"istanbul\"}}",
	"name": "KERRToken",
	"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFromAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInitialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KERRToken.sol\":\"KERRToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/KERRToken.sol\":{\"keccak256\":\"0xd9e2e44c4d7fd04d7b993912c401795a394ef61909690fe66cd8d853deca0c99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8862bfd7f962be3346c8b6ce97777503ca470884f707ba0aab4caa3b6733ff15\",\"dweb:/ipfs/QmQ6EQ14yztvuopLLF4UPDjmNbHNz6j392p41qF5QmZrPq\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_1015": {
				"entryPoint": null,
				"id": 1015,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_336": {
				"entryPoint": null,
				"id": 336,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_50": {
				"entryPoint": null,
				"id": 50,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_mint_639": {
				"entryPoint": 278,
				"id": 639,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_transferOwnership_146": {
				"entryPoint": 196,
				"id": 146,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_update_606": {
				"entryPoint": 336,
				"id": 606,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"array_dataslot_string_storage": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 983,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"clean_up_bytearray_end_slots_string_storage": {
				"entryPoint": 714,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
				"entryPoint": 793,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"extract_byte_array_length": {
				"entryPoint": 656,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_used_part_and_set_length_of_short_byte_array": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"panic_error_0x41": {
				"entryPoint": 634,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:3619:8",
					"nodeType": "YulBlock",
					"src": "0:3619:8",
					"statements": [
						{
							"nativeSrc": "6:3:8",
							"nodeType": "YulBlock",
							"src": "6:3:8",
							"statements": []
						},
						{
							"body": {
								"nativeSrc": "46:95:8",
								"nodeType": "YulBlock",
								"src": "46:95:8",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "63:1:8",
													"nodeType": "YulLiteral",
													"src": "63:1:8",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "70:3:8",
															"nodeType": "YulLiteral",
															"src": "70:3:8",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nativeSrc": "75:10:8",
															"nodeType": "YulLiteral",
															"src": "75:10:8",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "66:3:8",
														"nodeType": "YulIdentifier",
														"src": "66:3:8"
													},
													"nativeSrc": "66:20:8",
													"nodeType": "YulFunctionCall",
													"src": "66:20:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "56:6:8",
												"nodeType": "YulIdentifier",
												"src": "56:6:8"
											},
											"nativeSrc": "56:31:8",
											"nodeType": "YulFunctionCall",
											"src": "56:31:8"
										},
										"nativeSrc": "56:31:8",
										"nodeType": "YulExpressionStatement",
										"src": "56:31:8"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "103:1:8",
													"nodeType": "YulLiteral",
													"src": "103:1:8",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "106:4:8",
													"nodeType": "YulLiteral",
													"src": "106:4:8",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "96:6:8",
												"nodeType": "YulIdentifier",
												"src": "96:6:8"
											},
											"nativeSrc": "96:15:8",
											"nodeType": "YulFunctionCall",
											"src": "96:15:8"
										},
										"nativeSrc": "96:15:8",
										"nodeType": "YulExpressionStatement",
										"src": "96:15:8"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "127:1:8",
													"nodeType": "YulLiteral",
													"src": "127:1:8",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "130:4:8",
													"nodeType": "YulLiteral",
													"src": "130:4:8",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "120:6:8",
												"nodeType": "YulIdentifier",
												"src": "120:6:8"
											},
											"nativeSrc": "120:15:8",
											"nodeType": "YulFunctionCall",
											"src": "120:15:8"
										},
										"nativeSrc": "120:15:8",
										"nodeType": "YulExpressionStatement",
										"src": "120:15:8"
									}
								]
							},
							"name": "panic_error_0x41",
							"nativeSrc": "14:127:8",
							"nodeType": "YulFunctionDefinition",
							"src": "14:127:8"
						},
						{
							"body": {
								"nativeSrc": "201:325:8",
								"nodeType": "YulBlock",
								"src": "201:325:8",
								"statements": [
									{
										"nativeSrc": "211:22:8",
										"nodeType": "YulAssignment",
										"src": "211:22:8",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "225:1:8",
													"nodeType": "YulLiteral",
													"src": "225:1:8",
													"type": "",
													"value": "1"
												},
												{
													"name": "data",
													"nativeSrc": "228:4:8",
													"nodeType": "YulIdentifier",
													"src": "228:4:8"
												}
											],
											"functionName": {
												"name": "shr",
												"nativeSrc": "221:3:8",
												"nodeType": "YulIdentifier",
												"src": "221:3:8"
											},
											"nativeSrc": "221:12:8",
											"nodeType": "YulFunctionCall",
											"src": "221:12:8"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "211:6:8",
												"nodeType": "YulIdentifier",
												"src": "211:6:8"
											}
										]
									},
									{
										"nativeSrc": "242:38:8",
										"nodeType": "YulVariableDeclaration",
										"src": "242:38:8",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "272:4:8",
													"nodeType": "YulIdentifier",
													"src": "272:4:8"
												},
												{
													"kind": "number",
													"nativeSrc": "278:1:8",
													"nodeType": "YulLiteral",
													"src": "278:1:8",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "268:3:8",
												"nodeType": "YulIdentifier",
												"src": "268:3:8"
											},
											"nativeSrc": "268:12:8",
											"nodeType": "YulFunctionCall",
											"src": "268:12:8"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "246:18:8",
												"nodeType": "YulTypedName",
												"src": "246:18:8",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "319:31:8",
											"nodeType": "YulBlock",
											"src": "319:31:8",
											"statements": [
												{
													"nativeSrc": "321:27:8",
													"nodeType": "YulAssignment",
													"src": "321:27:8",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "335:6:8",
																"nodeType": "YulIdentifier",
																"src": "335:6:8"
															},
															{
																"kind": "number",
																"nativeSrc": "343:4:8",
																"nodeType": "YulLiteral",
																"src": "343:4:8",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "331:3:8",
															"nodeType": "YulIdentifier",
															"src": "331:3:8"
														},
														"nativeSrc": "331:17:8",
														"nodeType": "YulFunctionCall",
														"src": "331:17:8"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "321:6:8",
															"nodeType": "YulIdentifier",
															"src": "321:6:8"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "299:18:8",
													"nodeType": "YulIdentifier",
													"src": "299:18:8"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "292:6:8",
												"nodeType": "YulIdentifier",
												"src": "292:6:8"
											},
											"nativeSrc": "292:26:8",
											"nodeType": "YulFunctionCall",
											"src": "292:26:8"
										},
										"nativeSrc": "289:61:8",
										"nodeType": "YulIf",
										"src": "289:61:8"
									},
									{
										"body": {
											"nativeSrc": "409:111:8",
											"nodeType": "YulBlock",
											"src": "409:111:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "430:1:8",
																"nodeType": "YulLiteral",
																"src": "430:1:8",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "437:3:8",
																		"nodeType": "YulLiteral",
																		"src": "437:3:8",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "442:10:8",
																		"nodeType": "YulLiteral",
																		"src": "442:10:8",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "433:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:3:8"
																},
																"nativeSrc": "433:20:8",
																"nodeType": "YulFunctionCall",
																"src": "433:20:8"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "423:6:8",
															"nodeType": "YulIdentifier",
															"src": "423:6:8"
														},
														"nativeSrc": "423:31:8",
														"nodeType": "YulFunctionCall",
														"src": "423:31:8"
													},
													"nativeSrc": "423:31:8",
													"nodeType": "YulExpressionStatement",
													"src": "423:31:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "474:1:8",
																"nodeType": "YulLiteral",
																"src": "474:1:8",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nativeSrc": "477:4:8",
																"nodeType": "YulLiteral",
																"src": "477:4:8",
																"type": "",
																"value": "0x22"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "467:6:8",
															"nodeType": "YulIdentifier",
															"src": "467:6:8"
														},
														"nativeSrc": "467:15:8",
														"nodeType": "YulFunctionCall",
														"src": "467:15:8"
													},
													"nativeSrc": "467:15:8",
													"nodeType": "YulExpressionStatement",
													"src": "467:15:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "502:1:8",
																"nodeType": "YulLiteral",
																"src": "502:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "505:4:8",
																"nodeType": "YulLiteral",
																"src": "505:4:8",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "495:6:8",
															"nodeType": "YulIdentifier",
															"src": "495:6:8"
														},
														"nativeSrc": "495:15:8",
														"nodeType": "YulFunctionCall",
														"src": "495:15:8"
													},
													"nativeSrc": "495:15:8",
													"nodeType": "YulExpressionStatement",
													"src": "495:15:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "365:18:8",
													"nodeType": "YulIdentifier",
													"src": "365:18:8"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "388:6:8",
															"nodeType": "YulIdentifier",
															"src": "388:6:8"
														},
														{
															"kind": "number",
															"nativeSrc": "396:2:8",
															"nodeType": "YulLiteral",
															"src": "396:2:8",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "385:2:8",
														"nodeType": "YulIdentifier",
														"src": "385:2:8"
													},
													"nativeSrc": "385:14:8",
													"nodeType": "YulFunctionCall",
													"src": "385:14:8"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "362:2:8",
												"nodeType": "YulIdentifier",
												"src": "362:2:8"
											},
											"nativeSrc": "362:38:8",
											"nodeType": "YulFunctionCall",
											"src": "362:38:8"
										},
										"nativeSrc": "359:161:8",
										"nodeType": "YulIf",
										"src": "359:161:8"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "146:380:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "181:4:8",
									"nodeType": "YulTypedName",
									"src": "181:4:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "190:6:8",
									"nodeType": "YulTypedName",
									"src": "190:6:8",
									"type": ""
								}
							],
							"src": "146:380:8"
						},
						{
							"body": {
								"nativeSrc": "587:65:8",
								"nodeType": "YulBlock",
								"src": "587:65:8",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "604:1:8",
													"nodeType": "YulLiteral",
													"src": "604:1:8",
													"type": "",
													"value": "0"
												},
												{
													"name": "ptr",
													"nativeSrc": "607:3:8",
													"nodeType": "YulIdentifier",
													"src": "607:3:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "597:6:8",
												"nodeType": "YulIdentifier",
												"src": "597:6:8"
											},
											"nativeSrc": "597:14:8",
											"nodeType": "YulFunctionCall",
											"src": "597:14:8"
										},
										"nativeSrc": "597:14:8",
										"nodeType": "YulExpressionStatement",
										"src": "597:14:8"
									},
									{
										"nativeSrc": "620:26:8",
										"nodeType": "YulAssignment",
										"src": "620:26:8",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "638:1:8",
													"nodeType": "YulLiteral",
													"src": "638:1:8",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "641:4:8",
													"nodeType": "YulLiteral",
													"src": "641:4:8",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "keccak256",
												"nativeSrc": "628:9:8",
												"nodeType": "YulIdentifier",
												"src": "628:9:8"
											},
											"nativeSrc": "628:18:8",
											"nodeType": "YulFunctionCall",
											"src": "628:18:8"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "620:4:8",
												"nodeType": "YulIdentifier",
												"src": "620:4:8"
											}
										]
									}
								]
							},
							"name": "array_dataslot_string_storage",
							"nativeSrc": "531:121:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "ptr",
									"nativeSrc": "570:3:8",
									"nodeType": "YulTypedName",
									"src": "570:3:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "data",
									"nativeSrc": "578:4:8",
									"nodeType": "YulTypedName",
									"src": "578:4:8",
									"type": ""
								}
							],
							"src": "531:121:8"
						},
						{
							"body": {
								"nativeSrc": "738:437:8",
								"nodeType": "YulBlock",
								"src": "738:437:8",
								"statements": [
									{
										"body": {
											"nativeSrc": "771:398:8",
											"nodeType": "YulBlock",
											"src": "771:398:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "792:1:8",
																"nodeType": "YulLiteral",
																"src": "792:1:8",
																"type": "",
																"value": "0"
															},
															{
																"name": "array",
																"nativeSrc": "795:5:8",
																"nodeType": "YulIdentifier",
																"src": "795:5:8"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "785:6:8",
															"nodeType": "YulIdentifier",
															"src": "785:6:8"
														},
														"nativeSrc": "785:16:8",
														"nodeType": "YulFunctionCall",
														"src": "785:16:8"
													},
													"nativeSrc": "785:16:8",
													"nodeType": "YulExpressionStatement",
													"src": "785:16:8"
												},
												{
													"nativeSrc": "814:30:8",
													"nodeType": "YulVariableDeclaration",
													"src": "814:30:8",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "836:1:8",
																"nodeType": "YulLiteral",
																"src": "836:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "839:4:8",
																"nodeType": "YulLiteral",
																"src": "839:4:8",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "keccak256",
															"nativeSrc": "826:9:8",
															"nodeType": "YulIdentifier",
															"src": "826:9:8"
														},
														"nativeSrc": "826:18:8",
														"nodeType": "YulFunctionCall",
														"src": "826:18:8"
													},
													"variables": [
														{
															"name": "data",
															"nativeSrc": "818:4:8",
															"nodeType": "YulTypedName",
															"src": "818:4:8",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "857:57:8",
													"nodeType": "YulVariableDeclaration",
													"src": "857:57:8",
													"value": {
														"arguments": [
															{
																"name": "data",
																"nativeSrc": "880:4:8",
																"nodeType": "YulIdentifier",
																"src": "880:4:8"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "890:1:8",
																		"nodeType": "YulLiteral",
																		"src": "890:1:8",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "startIndex",
																				"nativeSrc": "897:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "897:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "909:2:8",
																				"nodeType": "YulLiteral",
																				"src": "909:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "893:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "893:3:8"
																		},
																		"nativeSrc": "893:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "893:19:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "886:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "886:3:8"
																},
																"nativeSrc": "886:27:8",
																"nodeType": "YulFunctionCall",
																"src": "886:27:8"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "876:3:8",
															"nodeType": "YulIdentifier",
															"src": "876:3:8"
														},
														"nativeSrc": "876:38:8",
														"nodeType": "YulFunctionCall",
														"src": "876:38:8"
													},
													"variables": [
														{
															"name": "deleteStart",
															"nativeSrc": "861:11:8",
															"nodeType": "YulTypedName",
															"src": "861:11:8",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nativeSrc": "951:23:8",
														"nodeType": "YulBlock",
														"src": "951:23:8",
														"statements": [
															{
																"nativeSrc": "953:19:8",
																"nodeType": "YulAssignment",
																"src": "953:19:8",
																"value": {
																	"name": "data",
																	"nativeSrc": "968:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "968:4:8"
																},
																"variableNames": [
																	{
																		"name": "deleteStart",
																		"nativeSrc": "953:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "953:11:8"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "startIndex",
																"nativeSrc": "933:10:8",
																"nodeType": "YulIdentifier",
																"src": "933:10:8"
															},
															{
																"kind": "number",
																"nativeSrc": "945:4:8",
																"nodeType": "YulLiteral",
																"src": "945:4:8",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "lt",
															"nativeSrc": "930:2:8",
															"nodeType": "YulIdentifier",
															"src": "930:2:8"
														},
														"nativeSrc": "930:20:8",
														"nodeType": "YulFunctionCall",
														"src": "930:20:8"
													},
													"nativeSrc": "927:47:8",
													"nodeType": "YulIf",
													"src": "927:47:8"
												},
												{
													"nativeSrc": "987:41:8",
													"nodeType": "YulVariableDeclaration",
													"src": "987:41:8",
													"value": {
														"arguments": [
															{
																"name": "data",
																"nativeSrc": "1001:4:8",
																"nodeType": "YulIdentifier",
																"src": "1001:4:8"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1011:1:8",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nativeSrc": "1018:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1018:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1023:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1023:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1014:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1014:3:8"
																		},
																		"nativeSrc": "1014:12:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1014:12:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1007:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1007:3:8"
																},
																"nativeSrc": "1007:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1007:20:8"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "997:3:8",
															"nodeType": "YulIdentifier",
															"src": "997:3:8"
														},
														"nativeSrc": "997:31:8",
														"nodeType": "YulFunctionCall",
														"src": "997:31:8"
													},
													"variables": [
														{
															"name": "_1",
															"nativeSrc": "991:2:8",
															"nodeType": "YulTypedName",
															"src": "991:2:8",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1041:24:8",
													"nodeType": "YulVariableDeclaration",
													"src": "1041:24:8",
													"value": {
														"name": "deleteStart",
														"nativeSrc": "1054:11:8",
														"nodeType": "YulIdentifier",
														"src": "1054:11:8"
													},
													"variables": [
														{
															"name": "start",
															"nativeSrc": "1045:5:8",
															"nodeType": "YulTypedName",
															"src": "1045:5:8",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nativeSrc": "1139:20:8",
														"nodeType": "YulBlock",
														"src": "1139:20:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"name": "start",
																			"nativeSrc": "1148:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "1148:5:8"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "1155:1:8",
																			"nodeType": "YulLiteral",
																			"src": "1155:1:8",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "sstore",
																		"nativeSrc": "1141:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1141:6:8"
																	},
																	"nativeSrc": "1141:16:8",
																	"nodeType": "YulFunctionCall",
																	"src": "1141:16:8"
																},
																"nativeSrc": "1141:16:8",
																"nodeType": "YulExpressionStatement",
																"src": "1141:16:8"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "start",
																"nativeSrc": "1089:5:8",
																"nodeType": "YulIdentifier",
																"src": "1089:5:8"
															},
															{
																"name": "_1",
																"nativeSrc": "1096:2:8",
																"nodeType": "YulIdentifier",
																"src": "1096:2:8"
															}
														],
														"functionName": {
															"name": "lt",
															"nativeSrc": "1086:2:8",
															"nodeType": "YulIdentifier",
															"src": "1086:2:8"
														},
														"nativeSrc": "1086:13:8",
														"nodeType": "YulFunctionCall",
														"src": "1086:13:8"
													},
													"nativeSrc": "1078:81:8",
													"nodeType": "YulForLoop",
													"post": {
														"nativeSrc": "1100:26:8",
														"nodeType": "YulBlock",
														"src": "1100:26:8",
														"statements": [
															{
																"nativeSrc": "1102:22:8",
																"nodeType": "YulAssignment",
																"src": "1102:22:8",
																"value": {
																	"arguments": [
																		{
																			"name": "start",
																			"nativeSrc": "1115:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "1115:5:8"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "1122:1:8",
																			"nodeType": "YulLiteral",
																			"src": "1122:1:8",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nativeSrc": "1111:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1111:3:8"
																	},
																	"nativeSrc": "1111:13:8",
																	"nodeType": "YulFunctionCall",
																	"src": "1111:13:8"
																},
																"variableNames": [
																	{
																		"name": "start",
																		"nativeSrc": "1102:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1102:5:8"
																	}
																]
															}
														]
													},
													"pre": {
														"nativeSrc": "1082:3:8",
														"nodeType": "YulBlock",
														"src": "1082:3:8",
														"statements": []
													},
													"src": "1078:81:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "len",
													"nativeSrc": "754:3:8",
													"nodeType": "YulIdentifier",
													"src": "754:3:8"
												},
												{
													"kind": "number",
													"nativeSrc": "759:2:8",
													"nodeType": "YulLiteral",
													"src": "759:2:8",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "751:2:8",
												"nodeType": "YulIdentifier",
												"src": "751:2:8"
											},
											"nativeSrc": "751:11:8",
											"nodeType": "YulFunctionCall",
											"src": "751:11:8"
										},
										"nativeSrc": "748:421:8",
										"nodeType": "YulIf",
										"src": "748:421:8"
									}
								]
							},
							"name": "clean_up_bytearray_end_slots_string_storage",
							"nativeSrc": "657:518:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "array",
									"nativeSrc": "710:5:8",
									"nodeType": "YulTypedName",
									"src": "710:5:8",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "717:3:8",
									"nodeType": "YulTypedName",
									"src": "717:3:8",
									"type": ""
								},
								{
									"name": "startIndex",
									"nativeSrc": "722:10:8",
									"nodeType": "YulTypedName",
									"src": "722:10:8",
									"type": ""
								}
							],
							"src": "657:518:8"
						},
						{
							"body": {
								"nativeSrc": "1265:81:8",
								"nodeType": "YulBlock",
								"src": "1265:81:8",
								"statements": [
									{
										"nativeSrc": "1275:65:8",
										"nodeType": "YulAssignment",
										"src": "1275:65:8",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "data",
															"nativeSrc": "1290:4:8",
															"nodeType": "YulIdentifier",
															"src": "1290:4:8"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1308:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1308:1:8",
																					"type": "",
																					"value": "3"
																				},
																				{
																					"name": "len",
																					"nativeSrc": "1311:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:8"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "1304:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1304:3:8"
																			},
																			"nativeSrc": "1304:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1304:11:8"
																		},
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1321:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1321:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "not",
																				"nativeSrc": "1317:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1317:3:8"
																			},
																			"nativeSrc": "1317:6:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1317:6:8"
																		}
																	],
																	"functionName": {
																		"name": "shr",
																		"nativeSrc": "1300:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1300:3:8"
																	},
																	"nativeSrc": "1300:24:8",
																	"nodeType": "YulFunctionCall",
																	"src": "1300:24:8"
																}
															],
															"functionName": {
																"name": "not",
																"nativeSrc": "1296:3:8",
																"nodeType": "YulIdentifier",
																"src": "1296:3:8"
															},
															"nativeSrc": "1296:29:8",
															"nodeType": "YulFunctionCall",
															"src": "1296:29:8"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "1286:3:8",
														"nodeType": "YulIdentifier",
														"src": "1286:3:8"
													},
													"nativeSrc": "1286:40:8",
													"nodeType": "YulFunctionCall",
													"src": "1286:40:8"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "1332:1:8",
															"nodeType": "YulLiteral",
															"src": "1332:1:8",
															"type": "",
															"value": "1"
														},
														{
															"name": "len",
															"nativeSrc": "1335:3:8",
															"nodeType": "YulIdentifier",
															"src": "1335:3:8"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "1328:3:8",
														"nodeType": "YulIdentifier",
														"src": "1328:3:8"
													},
													"nativeSrc": "1328:11:8",
													"nodeType": "YulFunctionCall",
													"src": "1328:11:8"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "1283:2:8",
												"nodeType": "YulIdentifier",
												"src": "1283:2:8"
											},
											"nativeSrc": "1283:57:8",
											"nodeType": "YulFunctionCall",
											"src": "1283:57:8"
										},
										"variableNames": [
											{
												"name": "used",
												"nativeSrc": "1275:4:8",
												"nodeType": "YulIdentifier",
												"src": "1275:4:8"
											}
										]
									}
								]
							},
							"name": "extract_used_part_and_set_length_of_short_byte_array",
							"nativeSrc": "1180:166:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "1242:4:8",
									"nodeType": "YulTypedName",
									"src": "1242:4:8",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "1248:3:8",
									"nodeType": "YulTypedName",
									"src": "1248:3:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "used",
									"nativeSrc": "1256:4:8",
									"nodeType": "YulTypedName",
									"src": "1256:4:8",
									"type": ""
								}
							],
							"src": "1180:166:8"
						},
						{
							"body": {
								"nativeSrc": "1447:1203:8",
								"nodeType": "YulBlock",
								"src": "1447:1203:8",
								"statements": [
									{
										"nativeSrc": "1457:24:8",
										"nodeType": "YulVariableDeclaration",
										"src": "1457:24:8",
										"value": {
											"arguments": [
												{
													"name": "src",
													"nativeSrc": "1477:3:8",
													"nodeType": "YulIdentifier",
													"src": "1477:3:8"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "1471:5:8",
												"nodeType": "YulIdentifier",
												"src": "1471:5:8"
											},
											"nativeSrc": "1471:10:8",
											"nodeType": "YulFunctionCall",
											"src": "1471:10:8"
										},
										"variables": [
											{
												"name": "newLen",
												"nativeSrc": "1461:6:8",
												"nodeType": "YulTypedName",
												"src": "1461:6:8",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "1524:22:8",
											"nodeType": "YulBlock",
											"src": "1524:22:8",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nativeSrc": "1526:16:8",
															"nodeType": "YulIdentifier",
															"src": "1526:16:8"
														},
														"nativeSrc": "1526:18:8",
														"nodeType": "YulFunctionCall",
														"src": "1526:18:8"
													},
													"nativeSrc": "1526:18:8",
													"nodeType": "YulExpressionStatement",
													"src": "1526:18:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "1496:6:8",
													"nodeType": "YulIdentifier",
													"src": "1496:6:8"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"kind": "number",
																	"nativeSrc": "1512:2:8",
																	"nodeType": "YulLiteral",
																	"src": "1512:2:8",
																	"type": "",
																	"value": "64"
																},
																{
																	"kind": "number",
																	"nativeSrc": "1516:1:8",
																	"nodeType": "YulLiteral",
																	"src": "1516:1:8",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "shl",
																"nativeSrc": "1508:3:8",
																"nodeType": "YulIdentifier",
																"src": "1508:3:8"
															},
															"nativeSrc": "1508:10:8",
															"nodeType": "YulFunctionCall",
															"src": "1508:10:8"
														},
														{
															"kind": "number",
															"nativeSrc": "1520:1:8",
															"nodeType": "YulLiteral",
															"src": "1520:1:8",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1504:3:8",
														"nodeType": "YulIdentifier",
														"src": "1504:3:8"
													},
													"nativeSrc": "1504:18:8",
													"nodeType": "YulFunctionCall",
													"src": "1504:18:8"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "1493:2:8",
												"nodeType": "YulIdentifier",
												"src": "1493:2:8"
											},
											"nativeSrc": "1493:30:8",
											"nodeType": "YulFunctionCall",
											"src": "1493:30:8"
										},
										"nativeSrc": "1490:56:8",
										"nodeType": "YulIf",
										"src": "1490:56:8"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "1599:4:8",
													"nodeType": "YulIdentifier",
													"src": "1599:4:8"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "slot",
																	"nativeSrc": "1637:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1637:4:8"
																}
															],
															"functionName": {
																"name": "sload",
																"nativeSrc": "1631:5:8",
																"nodeType": "YulIdentifier",
																"src": "1631:5:8"
															},
															"nativeSrc": "1631:11:8",
															"nodeType": "YulFunctionCall",
															"src": "1631:11:8"
														}
													],
													"functionName": {
														"name": "extract_byte_array_length",
														"nativeSrc": "1605:25:8",
														"nodeType": "YulIdentifier",
														"src": "1605:25:8"
													},
													"nativeSrc": "1605:38:8",
													"nodeType": "YulFunctionCall",
													"src": "1605:38:8"
												},
												{
													"name": "newLen",
													"nativeSrc": "1645:6:8",
													"nodeType": "YulIdentifier",
													"src": "1645:6:8"
												}
											],
											"functionName": {
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1555:43:8",
												"nodeType": "YulIdentifier",
												"src": "1555:43:8"
											},
											"nativeSrc": "1555:97:8",
											"nodeType": "YulFunctionCall",
											"src": "1555:97:8"
										},
										"nativeSrc": "1555:97:8",
										"nodeType": "YulExpressionStatement",
										"src": "1555:97:8"
									},
									{
										"nativeSrc": "1661:18:8",
										"nodeType": "YulVariableDeclaration",
										"src": "1661:18:8",
										"value": {
											"kind": "number",
											"nativeSrc": "1678:1:8",
											"nodeType": "YulLiteral",
											"src": "1678:1:8",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "srcOffset",
												"nativeSrc": "1665:9:8",
												"nodeType": "YulTypedName",
												"src": "1665:9:8",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1688:17:8",
										"nodeType": "YulAssignment",
										"src": "1688:17:8",
										"value": {
											"kind": "number",
											"nativeSrc": "1701:4:8",
											"nodeType": "YulLiteral",
											"src": "1701:4:8",
											"type": "",
											"value": "0x20"
										},
										"variableNames": [
											{
												"name": "srcOffset",
												"nativeSrc": "1688:9:8",
												"nodeType": "YulIdentifier",
												"src": "1688:9:8"
											}
										]
									},
									{
										"cases": [
											{
												"body": {
													"nativeSrc": "1751:642:8",
													"nodeType": "YulBlock",
													"src": "1751:642:8",
													"statements": [
														{
															"nativeSrc": "1765:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1784:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1796:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1796:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1792:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1792:3:8"
																		},
																		"nativeSrc": "1792:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1792:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1780:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1780:3:8"
																},
																"nativeSrc": "1780:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1780:20:8"
															},
															"variables": [
																{
																	"name": "loopEnd",
																	"nativeSrc": "1769:7:8",
																	"nodeType": "YulTypedName",
																	"src": "1769:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1813:49:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1813:49:8",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1857:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1857:4:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_string_storage",
																	"nativeSrc": "1827:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "1827:29:8"
																},
																"nativeSrc": "1827:35:8",
																"nodeType": "YulFunctionCall",
																"src": "1827:35:8"
															},
															"variables": [
																{
																	"name": "dstPtr",
																	"nativeSrc": "1817:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1817:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1875:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1875:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1884:1:8",
																"nodeType": "YulLiteral",
																"src": "1884:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1879:1:8",
																	"nodeType": "YulTypedName",
																	"src": "1879:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1955:165:8",
																"nodeType": "YulBlock",
																"src": "1955:165:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "1980:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1980:6:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1998:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1998:3:8"
																								},
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2003:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2003:9:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1994:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1994:3:8"
																							},
																							"nativeSrc": "1994:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1994:19:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1988:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1988:5:8"
																					},
																					"nativeSrc": "1988:26:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1988:26:8"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "1973:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1973:6:8"
																			},
																			"nativeSrc": "1973:42:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1973:42:8"
																		},
																		"nativeSrc": "1973:42:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1973:42:8"
																	},
																	{
																		"nativeSrc": "2032:24:8",
																		"nodeType": "YulAssignment",
																		"src": "2032:24:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "2046:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2046:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2054:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2054:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2042:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2042:3:8"
																			},
																			"nativeSrc": "2042:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2042:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dstPtr",
																				"nativeSrc": "2032:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2032:6:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2073:33:8",
																		"nodeType": "YulAssignment",
																		"src": "2073:33:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcOffset",
																					"nativeSrc": "2090:9:8",
																					"nodeType": "YulIdentifier",
																					"src": "2090:9:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2101:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2101:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2086:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2086:3:8"
																			},
																			"nativeSrc": "2086:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2086:20:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcOffset",
																				"nativeSrc": "2073:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2073:9:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1909:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "1909:1:8"
																	},
																	{
																		"name": "loopEnd",
																		"nativeSrc": "1912:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1912:7:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1906:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1906:2:8"
																},
																"nativeSrc": "1906:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1906:14:8"
															},
															"nativeSrc": "1898:222:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1921:21:8",
																"nodeType": "YulBlock",
																"src": "1921:21:8",
																"statements": [
																	{
																		"nativeSrc": "1923:17:8",
																		"nodeType": "YulAssignment",
																		"src": "1923:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1932:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "1932:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1935:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1935:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1928:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1928:3:8"
																			},
																			"nativeSrc": "1928:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1928:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1923:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1923:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1902:3:8",
																"nodeType": "YulBlock",
																"src": "1902:3:8",
																"statements": []
															},
															"src": "1898:222:8"
														},
														{
															"body": {
																"nativeSrc": "2168:166:8",
																"nodeType": "YulBlock",
																"src": "2168:166:8",
																"statements": [
																	{
																		"nativeSrc": "2186:43:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2186:43:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "2213:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2213:3:8"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "2218:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "2218:9:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2209:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2209:3:8"
																					},
																					"nativeSrc": "2209:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2209:19:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2203:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2203:5:8"
																			},
																			"nativeSrc": "2203:26:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2203:26:8"
																		},
																		"variables": [
																			{
																				"name": "lastValue",
																				"nativeSrc": "2190:9:8",
																				"nodeType": "YulTypedName",
																				"src": "2190:9:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "2253:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2253:6:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "lastValue",
																							"nativeSrc": "2265:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "2265:9:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "2292:1:8",
																															"nodeType": "YulLiteral",
																															"src": "2292:1:8",
																															"type": "",
																															"value": "3"
																														},
																														{
																															"name": "newLen",
																															"nativeSrc": "2295:6:8",
																															"nodeType": "YulIdentifier",
																															"src": "2295:6:8"
																														}
																													],
																													"functionName": {
																														"name": "shl",
																														"nativeSrc": "2288:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "2288:3:8"
																													},
																													"nativeSrc": "2288:14:8",
																													"nodeType": "YulFunctionCall",
																													"src": "2288:14:8"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "2304:3:8",
																													"nodeType": "YulLiteral",
																													"src": "2304:3:8",
																													"type": "",
																													"value": "248"
																												}
																											],
																											"functionName": {
																												"name": "and",
																												"nativeSrc": "2284:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2284:3:8"
																											},
																											"nativeSrc": "2284:24:8",
																											"nodeType": "YulFunctionCall",
																											"src": "2284:24:8"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2314:1:8",
																													"nodeType": "YulLiteral",
																													"src": "2314:1:8",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "not",
																												"nativeSrc": "2310:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2310:3:8"
																											},
																											"nativeSrc": "2310:6:8",
																											"nodeType": "YulFunctionCall",
																											"src": "2310:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "2280:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2280:3:8"
																									},
																									"nativeSrc": "2280:37:8",
																									"nodeType": "YulFunctionCall",
																									"src": "2280:37:8"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2276:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2276:3:8"
																							},
																							"nativeSrc": "2276:42:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2276:42:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2261:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2261:3:8"
																					},
																					"nativeSrc": "2261:58:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2261:58:8"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "2246:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2246:6:8"
																			},
																			"nativeSrc": "2246:74:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2246:74:8"
																		},
																		"nativeSrc": "2246:74:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2246:74:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "loopEnd",
																		"nativeSrc": "2139:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2139:7:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2148:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2148:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2136:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2136:2:8"
																},
																"nativeSrc": "2136:19:8",
																"nodeType": "YulFunctionCall",
																"src": "2136:19:8"
															},
															"nativeSrc": "2133:201:8",
															"nodeType": "YulIf",
															"src": "2133:201:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2354:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2354:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2368:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2368:1:8",
																						"type": "",
																						"value": "1"
																					},
																					{
																						"name": "newLen",
																						"nativeSrc": "2371:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2371:6:8"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2364:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2364:3:8"
																				},
																				"nativeSrc": "2364:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2364:14:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2380:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2380:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2360:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:8"
																		},
																		"nativeSrc": "2360:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2360:22:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2347:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2347:6:8"
																},
																"nativeSrc": "2347:36:8",
																"nodeType": "YulFunctionCall",
																"src": "2347:36:8"
															},
															"nativeSrc": "2347:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "2347:36:8"
														}
													]
												},
												"nativeSrc": "1744:649:8",
												"nodeType": "YulCase",
												"src": "1744:649:8",
												"value": {
													"kind": "number",
													"nativeSrc": "1749:1:8",
													"nodeType": "YulLiteral",
													"src": "1749:1:8",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nativeSrc": "2410:234:8",
													"nodeType": "YulBlock",
													"src": "2410:234:8",
													"statements": [
														{
															"nativeSrc": "2424:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2424:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2437:1:8",
																"nodeType": "YulLiteral",
																"src": "2437:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2428:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2473:67:8",
																"nodeType": "YulBlock",
																"src": "2473:67:8",
																"statements": [
																	{
																		"nativeSrc": "2491:35:8",
																		"nodeType": "YulAssignment",
																		"src": "2491:35:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "2510:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2510:3:8"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "2515:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "2515:9:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2506:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2506:3:8"
																					},
																					"nativeSrc": "2506:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2506:19:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2500:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2500:5:8"
																			},
																			"nativeSrc": "2500:26:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2500:26:8"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "2491:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2491:5:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"name": "newLen",
																"nativeSrc": "2454:6:8",
																"nodeType": "YulIdentifier",
																"src": "2454:6:8"
															},
															"nativeSrc": "2451:89:8",
															"nodeType": "YulIf",
															"src": "2451:89:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2560:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2560:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2619:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2619:5:8"
																			},
																			{
																				"name": "newLen",
																				"nativeSrc": "2626:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_used_part_and_set_length_of_short_byte_array",
																			"nativeSrc": "2566:52:8",
																			"nodeType": "YulIdentifier",
																			"src": "2566:52:8"
																		},
																		"nativeSrc": "2566:67:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2566:67:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2553:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2553:6:8"
																},
																"nativeSrc": "2553:81:8",
																"nodeType": "YulFunctionCall",
																"src": "2553:81:8"
															},
															"nativeSrc": "2553:81:8",
															"nodeType": "YulExpressionStatement",
															"src": "2553:81:8"
														}
													]
												},
												"nativeSrc": "2402:242:8",
												"nodeType": "YulCase",
												"src": "2402:242:8",
												"value": "default"
											}
										],
										"expression": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "1724:6:8",
													"nodeType": "YulIdentifier",
													"src": "1724:6:8"
												},
												{
													"kind": "number",
													"nativeSrc": "1732:2:8",
													"nodeType": "YulLiteral",
													"src": "1732:2:8",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "1721:2:8",
												"nodeType": "YulIdentifier",
												"src": "1721:2:8"
											},
											"nativeSrc": "1721:14:8",
											"nodeType": "YulFunctionCall",
											"src": "1721:14:8"
										},
										"nativeSrc": "1714:930:8",
										"nodeType": "YulSwitch",
										"src": "1714:930:8"
									}
								]
							},
							"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
							"nativeSrc": "1351:1299:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "1432:4:8",
									"nodeType": "YulTypedName",
									"src": "1432:4:8",
									"type": ""
								},
								{
									"name": "src",
									"nativeSrc": "1438:3:8",
									"nodeType": "YulTypedName",
									"src": "1438:3:8",
									"type": ""
								}
							],
							"src": "1351:1299:8"
						},
						{
							"body": {
								"nativeSrc": "2756:102:8",
								"nodeType": "YulBlock",
								"src": "2756:102:8",
								"statements": [
									{
										"nativeSrc": "2766:26:8",
										"nodeType": "YulAssignment",
										"src": "2766:26:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2778:9:8",
													"nodeType": "YulIdentifier",
													"src": "2778:9:8"
												},
												{
													"kind": "number",
													"nativeSrc": "2789:2:8",
													"nodeType": "YulLiteral",
													"src": "2789:2:8",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2774:3:8",
												"nodeType": "YulIdentifier",
												"src": "2774:3:8"
											},
											"nativeSrc": "2774:18:8",
											"nodeType": "YulFunctionCall",
											"src": "2774:18:8"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2766:4:8",
												"nodeType": "YulIdentifier",
												"src": "2766:4:8"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2808:9:8",
													"nodeType": "YulIdentifier",
													"src": "2808:9:8"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "2823:6:8",
															"nodeType": "YulIdentifier",
															"src": "2823:6:8"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "2839:3:8",
																			"nodeType": "YulLiteral",
																			"src": "2839:3:8",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "2844:1:8",
																			"nodeType": "YulLiteral",
																			"src": "2844:1:8",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "2835:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2835:3:8"
																	},
																	"nativeSrc": "2835:11:8",
																	"nodeType": "YulFunctionCall",
																	"src": "2835:11:8"
																},
																{
																	"kind": "number",
																	"nativeSrc": "2848:1:8",
																	"nodeType": "YulLiteral",
																	"src": "2848:1:8",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nativeSrc": "2831:3:8",
																"nodeType": "YulIdentifier",
																"src": "2831:3:8"
															},
															"nativeSrc": "2831:19:8",
															"nodeType": "YulFunctionCall",
															"src": "2831:19:8"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "2819:3:8",
														"nodeType": "YulIdentifier",
														"src": "2819:3:8"
													},
													"nativeSrc": "2819:32:8",
													"nodeType": "YulFunctionCall",
													"src": "2819:32:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2801:6:8",
												"nodeType": "YulIdentifier",
												"src": "2801:6:8"
											},
											"nativeSrc": "2801:51:8",
											"nodeType": "YulFunctionCall",
											"src": "2801:51:8"
										},
										"nativeSrc": "2801:51:8",
										"nodeType": "YulExpressionStatement",
										"src": "2801:51:8"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "2655:203:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2725:9:8",
									"nodeType": "YulTypedName",
									"src": "2725:9:8",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "2736:6:8",
									"nodeType": "YulTypedName",
									"src": "2736:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "2747:4:8",
									"nodeType": "YulTypedName",
									"src": "2747:4:8",
									"type": ""
								}
							],
							"src": "2655:203:8"
						},
						{
							"body": {
								"nativeSrc": "2911:174:8",
								"nodeType": "YulBlock",
								"src": "2911:174:8",
								"statements": [
									{
										"nativeSrc": "2921:16:8",
										"nodeType": "YulAssignment",
										"src": "2921:16:8",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "2932:1:8",
													"nodeType": "YulIdentifier",
													"src": "2932:1:8"
												},
												{
													"name": "y",
													"nativeSrc": "2935:1:8",
													"nodeType": "YulIdentifier",
													"src": "2935:1:8"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2928:3:8",
												"nodeType": "YulIdentifier",
												"src": "2928:3:8"
											},
											"nativeSrc": "2928:9:8",
											"nodeType": "YulFunctionCall",
											"src": "2928:9:8"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "2921:3:8",
												"nodeType": "YulIdentifier",
												"src": "2921:3:8"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "2968:111:8",
											"nodeType": "YulBlock",
											"src": "2968:111:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2989:1:8",
																"nodeType": "YulLiteral",
																"src": "2989:1:8",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2996:3:8",
																		"nodeType": "YulLiteral",
																		"src": "2996:3:8",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3001:10:8",
																		"nodeType": "YulLiteral",
																		"src": "3001:10:8",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2992:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:8"
																},
																"nativeSrc": "2992:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2992:20:8"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "2982:6:8",
															"nodeType": "YulIdentifier",
															"src": "2982:6:8"
														},
														"nativeSrc": "2982:31:8",
														"nodeType": "YulFunctionCall",
														"src": "2982:31:8"
													},
													"nativeSrc": "2982:31:8",
													"nodeType": "YulExpressionStatement",
													"src": "2982:31:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3033:1:8",
																"nodeType": "YulLiteral",
																"src": "3033:1:8",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nativeSrc": "3036:4:8",
																"nodeType": "YulLiteral",
																"src": "3036:4:8",
																"type": "",
																"value": "0x11"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "3026:6:8",
															"nodeType": "YulIdentifier",
															"src": "3026:6:8"
														},
														"nativeSrc": "3026:15:8",
														"nodeType": "YulFunctionCall",
														"src": "3026:15:8"
													},
													"nativeSrc": "3026:15:8",
													"nodeType": "YulExpressionStatement",
													"src": "3026:15:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3061:1:8",
																"nodeType": "YulLiteral",
																"src": "3061:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "3064:4:8",
																"nodeType": "YulLiteral",
																"src": "3064:4:8",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "3054:6:8",
															"nodeType": "YulIdentifier",
															"src": "3054:6:8"
														},
														"nativeSrc": "3054:15:8",
														"nodeType": "YulFunctionCall",
														"src": "3054:15:8"
													},
													"nativeSrc": "3054:15:8",
													"nodeType": "YulExpressionStatement",
													"src": "3054:15:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "2952:1:8",
													"nodeType": "YulIdentifier",
													"src": "2952:1:8"
												},
												{
													"name": "sum",
													"nativeSrc": "2955:3:8",
													"nodeType": "YulIdentifier",
													"src": "2955:3:8"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "2949:2:8",
												"nodeType": "YulIdentifier",
												"src": "2949:2:8"
											},
											"nativeSrc": "2949:10:8",
											"nodeType": "YulFunctionCall",
											"src": "2949:10:8"
										},
										"nativeSrc": "2946:133:8",
										"nodeType": "YulIf",
										"src": "2946:133:8"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "2863:222:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "2894:1:8",
									"nodeType": "YulTypedName",
									"src": "2894:1:8",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "2897:1:8",
									"nodeType": "YulTypedName",
									"src": "2897:1:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "2903:3:8",
									"nodeType": "YulTypedName",
									"src": "2903:3:8",
									"type": ""
								}
							],
							"src": "2863:222:8"
						},
						{
							"body": {
								"nativeSrc": "3247:188:8",
								"nodeType": "YulBlock",
								"src": "3247:188:8",
								"statements": [
									{
										"nativeSrc": "3257:26:8",
										"nodeType": "YulAssignment",
										"src": "3257:26:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3269:9:8",
													"nodeType": "YulIdentifier",
													"src": "3269:9:8"
												},
												{
													"kind": "number",
													"nativeSrc": "3280:2:8",
													"nodeType": "YulLiteral",
													"src": "3280:2:8",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3265:3:8",
												"nodeType": "YulIdentifier",
												"src": "3265:3:8"
											},
											"nativeSrc": "3265:18:8",
											"nodeType": "YulFunctionCall",
											"src": "3265:18:8"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3257:4:8",
												"nodeType": "YulIdentifier",
												"src": "3257:4:8"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3299:9:8",
													"nodeType": "YulIdentifier",
													"src": "3299:9:8"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "3314:6:8",
															"nodeType": "YulIdentifier",
															"src": "3314:6:8"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "3330:3:8",
																			"nodeType": "YulLiteral",
																			"src": "3330:3:8",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "3335:1:8",
																			"nodeType": "YulLiteral",
																			"src": "3335:1:8",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "3326:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3326:3:8"
																	},
																	"nativeSrc": "3326:11:8",
																	"nodeType": "YulFunctionCall",
																	"src": "3326:11:8"
																},
																{
																	"kind": "number",
																	"nativeSrc": "3339:1:8",
																	"nodeType": "YulLiteral",
																	"src": "3339:1:8",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nativeSrc": "3322:3:8",
																"nodeType": "YulIdentifier",
																"src": "3322:3:8"
															},
															"nativeSrc": "3322:19:8",
															"nodeType": "YulFunctionCall",
															"src": "3322:19:8"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "3310:3:8",
														"nodeType": "YulIdentifier",
														"src": "3310:3:8"
													},
													"nativeSrc": "3310:32:8",
													"nodeType": "YulFunctionCall",
													"src": "3310:32:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3292:6:8",
												"nodeType": "YulIdentifier",
												"src": "3292:6:8"
											},
											"nativeSrc": "3292:51:8",
											"nodeType": "YulFunctionCall",
											"src": "3292:51:8"
										},
										"nativeSrc": "3292:51:8",
										"nodeType": "YulExpressionStatement",
										"src": "3292:51:8"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3363:9:8",
															"nodeType": "YulIdentifier",
															"src": "3363:9:8"
														},
														{
															"kind": "number",
															"nativeSrc": "3374:2:8",
															"nodeType": "YulLiteral",
															"src": "3374:2:8",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3359:3:8",
														"nodeType": "YulIdentifier",
														"src": "3359:3:8"
													},
													"nativeSrc": "3359:18:8",
													"nodeType": "YulFunctionCall",
													"src": "3359:18:8"
												},
												{
													"name": "value1",
													"nativeSrc": "3379:6:8",
													"nodeType": "YulIdentifier",
													"src": "3379:6:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3352:6:8",
												"nodeType": "YulIdentifier",
												"src": "3352:6:8"
											},
											"nativeSrc": "3352:34:8",
											"nodeType": "YulFunctionCall",
											"src": "3352:34:8"
										},
										"nativeSrc": "3352:34:8",
										"nodeType": "YulExpressionStatement",
										"src": "3352:34:8"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3406:9:8",
															"nodeType": "YulIdentifier",
															"src": "3406:9:8"
														},
														{
															"kind": "number",
															"nativeSrc": "3417:2:8",
															"nodeType": "YulLiteral",
															"src": "3417:2:8",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3402:3:8",
														"nodeType": "YulIdentifier",
														"src": "3402:3:8"
													},
													"nativeSrc": "3402:18:8",
													"nodeType": "YulFunctionCall",
													"src": "3402:18:8"
												},
												{
													"name": "value2",
													"nativeSrc": "3422:6:8",
													"nodeType": "YulIdentifier",
													"src": "3422:6:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3395:6:8",
												"nodeType": "YulIdentifier",
												"src": "3395:6:8"
											},
											"nativeSrc": "3395:34:8",
											"nodeType": "YulFunctionCall",
											"src": "3395:34:8"
										},
										"nativeSrc": "3395:34:8",
										"nodeType": "YulExpressionStatement",
										"src": "3395:34:8"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "3090:345:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3200:9:8",
									"nodeType": "YulTypedName",
									"src": "3200:9:8",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "3211:6:8",
									"nodeType": "YulTypedName",
									"src": "3211:6:8",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3219:6:8",
									"nodeType": "YulTypedName",
									"src": "3219:6:8",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3227:6:8",
									"nodeType": "YulTypedName",
									"src": "3227:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3238:4:8",
									"nodeType": "YulTypedName",
									"src": "3238:4:8",
									"type": ""
								}
							],
							"src": "3090:345:8"
						},
						{
							"body": {
								"nativeSrc": "3541:76:8",
								"nodeType": "YulBlock",
								"src": "3541:76:8",
								"statements": [
									{
										"nativeSrc": "3551:26:8",
										"nodeType": "YulAssignment",
										"src": "3551:26:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3563:9:8",
													"nodeType": "YulIdentifier",
													"src": "3563:9:8"
												},
												{
													"kind": "number",
													"nativeSrc": "3574:2:8",
													"nodeType": "YulLiteral",
													"src": "3574:2:8",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3559:3:8",
												"nodeType": "YulIdentifier",
												"src": "3559:3:8"
											},
											"nativeSrc": "3559:18:8",
											"nodeType": "YulFunctionCall",
											"src": "3559:18:8"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3551:4:8",
												"nodeType": "YulIdentifier",
												"src": "3551:4:8"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3593:9:8",
													"nodeType": "YulIdentifier",
													"src": "3593:9:8"
												},
												{
													"name": "value0",
													"nativeSrc": "3604:6:8",
													"nodeType": "YulIdentifier",
													"src": "3604:6:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3586:6:8",
												"nodeType": "YulIdentifier",
												"src": "3586:6:8"
											},
											"nativeSrc": "3586:25:8",
											"nodeType": "YulFunctionCall",
											"src": "3586:25:8"
										},
										"nativeSrc": "3586:25:8",
										"nodeType": "YulExpressionStatement",
										"src": "3586:25:8"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "3440:177:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3510:9:8",
									"nodeType": "YulTypedName",
									"src": "3510:9:8",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3521:6:8",
									"nodeType": "YulTypedName",
									"src": "3521:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3532:4:8",
									"nodeType": "YulTypedName",
									"src": "3532:4:8",
									"type": ""
								}
							],
							"src": "3440:177:8"
						}
					]
				},
				"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
				"id": 8,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "608060405234801561001057600080fd5b50336040518060400160405280600981526020016825a2a9292a37b5b2b760b91b8152506040518060400160405280600481526020016325a2a92960e11b81525081600390816100609190610319565b50600461006d8282610319565b5050506001600160a01b03811661009f57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100a8816100c4565b506100bf336b033b2e3c9fd0803ce8000000610116565b6103fe565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101405760405163ec442f0560e01b815260006004820152602401610096565b61014c60008383610150565b5050565b6001600160a01b03831661017b57806002600082825461017091906103d7565b909155506101ed9050565b6001600160a01b038316600090815260208190526040902054818110156101ce5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610096565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661020957600280548290039055610228565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161026d91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806102a457607f821691505b6020821081036102c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561031457806000526020600020601f840160051c810160208510156102f15750805b601f840160051c820191505b8181101561031157600081556001016102fd565b50505b505050565b81516001600160401b038111156103325761033261027a565b610346816103408454610290565b846102ca565b6020601f82116001811461037a57600083156103625750848201515b600019600385901b1c1916600184901b178455610311565b600084815260208120601f198516915b828110156103aa578785015182556020948501946001909201910161038a565b50848210156103c85786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156103f857634e487b7160e01b600052601160045260246000fd5b92915050565b6109e08061040d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a25780638da5cb5b116100715780638da5cb5b1461023457806395d89b411461024f578063a9059cbb14610257578063dd62ed3e1461026a578063f2fde38b146102a357600080fd5b806370a08231146101de578063715018a61461020757806379cc67901461020f57806381a4a6d81461022257600080fd5b80632ff2e9dc116100e95780632ff2e9dc14610181578063313ce5671461019457806340c10f19146101a357806342966c68146101b857806359dc2dd2146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102b6565b6040516101309190610810565b60405180910390f35b61014c61014736600461087a565b610348565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c3660046108a4565b610362565b6101606b033b2e3c9fd0803ce800000081565b60405160128152602001610130565b6101b66101b136600461087a565b610386565b005b6101b66101c63660046108e1565b61039c565b6101b66101d936600461087a565b6103a9565b6101606101ec3660046108fa565b6001600160a01b031660009081526020819052604090205490565b6101b66103bb565b6101b661021d36600461087a565b6103cf565b6b033b2e3c9fd0803ce8000000610160565b6005546040516001600160a01b039091168152602001610130565b6101236103da565b61014c61026536600461087a565b6103e9565b61016061027836600461091c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b66102b13660046108fa565b6103f7565b6060600380546102c59061094f565b80601f01602080910402602001604051908101604052809291908181526020018280546102f19061094f565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b5050505050905090565b600033610356818585610437565b60019150505b92915050565b600033610370858285610449565b61037b8585856104c7565b506001949350505050565b61038e610526565b6103988282610553565b5050565b6103a63382610589565b50565b6103b1610526565b6103988282610589565b6103c3610526565b6103cd60006105bf565b565b6103b1823383610449565b6060600480546102c59061094f565b6000336103568185856104c7565b6103ff610526565b6001600160a01b03811661042e57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103a6816105bf565b6104448383836001610611565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146104c157818110156104b257604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610425565b6104c184848484036000610611565b50505050565b6001600160a01b0383166104f157604051634b637e8f60e11b815260006004820152602401610425565b6001600160a01b03821661051b5760405163ec442f0560e01b815260006004820152602401610425565b6104448383836106e6565b6005546001600160a01b031633146103cd5760405163118cdaa760e01b8152336004820152602401610425565b6001600160a01b03821661057d5760405163ec442f0560e01b815260006004820152602401610425565b610398600083836106e6565b6001600160a01b0382166105b357604051634b637e8f60e11b815260006004820152602401610425565b610398826000836106e6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841661063b5760405163e602df0560e01b815260006004820152602401610425565b6001600160a01b03831661066557604051634a1406b160e11b815260006004820152602401610425565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104c157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106d891815260200190565b60405180910390a350505050565b6001600160a01b0383166107115780600260008282546107069190610989565b909155506107839050565b6001600160a01b038316600090815260208190526040902054818110156107645760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610425565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661079f576002805482900390556107be565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161080391815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561083e5760208186018101516040868401015201610821565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461087557600080fd5b919050565b6000806040838503121561088d57600080fd5b6108968361085e565b946020939093013593505050565b6000806000606084860312156108b957600080fd5b6108c28461085e565b92506108d06020850161085e565b929592945050506040919091013590565b6000602082840312156108f357600080fd5b5035919050565b60006020828403121561090c57600080fd5b6109158261085e565b9392505050565b6000806040838503121561092f57600080fd5b6109388361085e565b91506109466020840161085e565b90509250929050565b600181811c9082168061096357607f821691505b60208210810361098357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561035c57634e487b7160e01b600052601160045260246000fdfea26469706673582212206957db4e7676bbd3ac194c5025ea0ab739dcd4ca5a8a99e819b55039d967636c64736f6c634300081a0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x25A2A9292A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x25A2A929 PUSH1 0xE1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x60 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x6D DUP3 DUP3 PUSH2 0x319 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8 DUP2 PUSH2 0xC4 JUMP JUMPDEST POP PUSH2 0xBF CALLER PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x116 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x96 JUMP JUMPDEST PUSH2 0x14C PUSH1 0x0 DUP4 DUP4 PUSH2 0x150 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x17B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x3D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1ED SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x209 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x314 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2F1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2FD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x332 JUMPI PUSH2 0x332 PUSH2 0x27A JUMP JUMPDEST PUSH2 0x346 DUP2 PUSH2 0x340 DUP5 SLOAD PUSH2 0x290 JUMP JUMPDEST DUP5 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x362 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3AA JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x38A JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3C8 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9E0 DUP1 PUSH2 0x40D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x81A4A6D8 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x59DC2DD2 EQ PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0x160 PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x14C PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x91C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0x94F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F1 SWAP1 PUSH2 0x94F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x313 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x321 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x370 DUP6 DUP3 DUP6 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x37B DUP6 DUP6 DUP6 PUSH2 0x4C7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0x526 JUMP JUMPDEST PUSH2 0x398 DUP3 DUP3 PUSH2 0x553 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3A6 CALLER DUP3 PUSH2 0x589 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x398 DUP3 DUP3 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x3CD PUSH1 0x0 PUSH2 0x5BF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3B1 DUP3 CALLER DUP4 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A6 DUP2 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x611 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0x4C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x611 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 DUP4 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0x398 PUSH1 0x0 DUP4 DUP4 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0x398 DUP3 PUSH1 0x0 DUP4 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6D8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x711 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x783 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x803 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x83E JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x821 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x896 DUP4 PUSH2 0x85E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP5 PUSH2 0x85E JUMP JUMPDEST SWAP3 POP PUSH2 0x8D0 PUSH1 0x20 DUP6 ADD PUSH2 0x85E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x915 DUP3 PUSH2 0x85E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x938 DUP4 PUSH2 0x85E JUMP JUMPDEST SWAP2 POP PUSH2 0x946 PUSH1 0x20 DUP5 ADD PUSH2 0x85E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x963 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x983 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x35C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x57DB4E7676BBD3AC194C POP 0x25 0xEA EXP 0xB7 CODECOPY 0xDC 0xD4 0xCA GAS DUP11 SWAP10 0xE8 NOT 0xB5 POP CODECOPY 0xD9 PUSH8 0x636C64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
		"sourceMap": "250:667:7:-:0;;;418:113;;;;;;;;;;467:10;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2801:51:8;2774:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;490:33:7::2;496:10;350:21;490:5;:33::i;:::-;250:667:::0;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2801:51:8;2774:18;;7835:32:2;2655:203:8;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;3310:32:8;;6649:50:2;;;3292:51:8;3359:18;;;3352:34;;;3402:18;;;3395:34;;;3265:18;;6649:50:2;3090:345:8;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;3586::8;;3574:2;3559:18;;3440:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:8;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:8;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:8;;;2500:26;2451:89;-1:-1:-1;;1308:1:8;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:8;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:8;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:8;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:8:o;2863:222::-;2928:9;;;2949:10;;;2946:133;;;3001:10;2996:3;2992:20;2989:1;2982:31;3036:4;3033:1;3026:15;3064:4;3061:1;3054:15;2946:133;2863:222;;;;:::o;3440:177::-;250:667:7;;;;;;"
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "burn",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "burnFrom",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "burnFromAccount",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "allowance",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "needed",
					"type": "uint256"
				}
			],
			"name": "ERC20InsufficientAllowance",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "balance",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "needed",
					"type": "uint256"
				}
			],
			"name": "ERC20InsufficientBalance",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "approver",
					"type": "address"
				}
			],
			"name": "ERC20InvalidApprover",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "receiver",
					"type": "address"
				}
			],
			"name": "ERC20InvalidReceiver",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				}
			],
			"name": "ERC20InvalidSender",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "ERC20InvalidSpender",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				}
			],
			"name": "OwnableInvalidOwner",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "OwnableUnauthorizedAccount",
			"type": "error"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "mint",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getInitialSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "INITIAL_SUPPLY",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 307,
				"contract": "contracts/KERRToken.sol:KERRToken",
				"label": "_balances",
				"offset": 0,
				"slot": "0",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 313,
				"contract": "contracts/KERRToken.sol:KERRToken",
				"label": "_allowances",
				"offset": 0,
				"slot": "1",
				"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
			},
			{
				"astId": 315,
				"contract": "contracts/KERRToken.sol:KERRToken",
				"label": "_totalSupply",
				"offset": 0,
				"slot": "2",
				"type": "t_uint256"
			},
			{
				"astId": 317,
				"contract": "contracts/KERRToken.sol:KERRToken",
				"label": "_name",
				"offset": 0,
				"slot": "3",
				"type": "t_string_storage"
			},
			{
				"astId": 319,
				"contract": "contracts/KERRToken.sol:KERRToken",
				"label": "_symbol",
				"offset": 0,
				"slot": "4",
				"type": "t_string_storage"
			},
			{
				"astId": 8,
				"contract": "contracts/KERRToken.sol:KERRToken",
				"label": "_owner",
				"offset": 0,
				"slot": "5",
				"type": "t_address"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => mapping(address => uint256))",
				"numberOfBytes": "32",
				"value": "t_mapping(t_address,t_uint256)"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_string_storage": {
				"encoding": "bytes",
				"label": "string",
				"numberOfBytes": "32"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var kerrtokenContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFromAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInitialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]);\nvar kerrtoken = kerrtokenContract.deploy({\n     data: '0x608060405234801561001057600080fd5b50336040518060400160405280600981526020016825a2a9292a37b5b2b760b91b8152506040518060400160405280600481526020016325a2a92960e11b81525081600390816100609190610319565b50600461006d8282610319565b5050506001600160a01b03811661009f57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100a8816100c4565b506100bf336b033b2e3c9fd0803ce8000000610116565b6103fe565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101405760405163ec442f0560e01b815260006004820152602401610096565b61014c60008383610150565b5050565b6001600160a01b03831661017b57806002600082825461017091906103d7565b909155506101ed9050565b6001600160a01b038316600090815260208190526040902054818110156101ce5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610096565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661020957600280548290039055610228565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161026d91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806102a457607f821691505b6020821081036102c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561031457806000526020600020601f840160051c810160208510156102f15750805b601f840160051c820191505b8181101561031157600081556001016102fd565b50505b505050565b81516001600160401b038111156103325761033261027a565b610346816103408454610290565b846102ca565b6020601f82116001811461037a57600083156103625750848201515b600019600385901b1c1916600184901b178455610311565b600084815260208120601f198516915b828110156103aa578785015182556020948501946001909201910161038a565b50848210156103c85786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156103f857634e487b7160e01b600052601160045260246000fd5b92915050565b6109e08061040d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a25780638da5cb5b116100715780638da5cb5b1461023457806395d89b411461024f578063a9059cbb14610257578063dd62ed3e1461026a578063f2fde38b146102a357600080fd5b806370a08231146101de578063715018a61461020757806379cc67901461020f57806381a4a6d81461022257600080fd5b80632ff2e9dc116100e95780632ff2e9dc14610181578063313ce5671461019457806340c10f19146101a357806342966c68146101b857806359dc2dd2146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102b6565b6040516101309190610810565b60405180910390f35b61014c61014736600461087a565b610348565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c3660046108a4565b610362565b6101606b033b2e3c9fd0803ce800000081565b60405160128152602001610130565b6101b66101b136600461087a565b610386565b005b6101b66101c63660046108e1565b61039c565b6101b66101d936600461087a565b6103a9565b6101606101ec3660046108fa565b6001600160a01b031660009081526020819052604090205490565b6101b66103bb565b6101b661021d36600461087a565b6103cf565b6b033b2e3c9fd0803ce8000000610160565b6005546040516001600160a01b039091168152602001610130565b6101236103da565b61014c61026536600461087a565b6103e9565b61016061027836600461091c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b66102b13660046108fa565b6103f7565b6060600380546102c59061094f565b80601f01602080910402602001604051908101604052809291908181526020018280546102f19061094f565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b5050505050905090565b600033610356818585610437565b60019150505b92915050565b600033610370858285610449565b61037b8585856104c7565b506001949350505050565b61038e610526565b6103988282610553565b5050565b6103a63382610589565b50565b6103b1610526565b6103988282610589565b6103c3610526565b6103cd60006105bf565b565b6103b1823383610449565b6060600480546102c59061094f565b6000336103568185856104c7565b6103ff610526565b6001600160a01b03811661042e57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103a6816105bf565b6104448383836001610611565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146104c157818110156104b257604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610425565b6104c184848484036000610611565b50505050565b6001600160a01b0383166104f157604051634b637e8f60e11b815260006004820152602401610425565b6001600160a01b03821661051b5760405163ec442f0560e01b815260006004820152602401610425565b6104448383836106e6565b6005546001600160a01b031633146103cd5760405163118cdaa760e01b8152336004820152602401610425565b6001600160a01b03821661057d5760405163ec442f0560e01b815260006004820152602401610425565b610398600083836106e6565b6001600160a01b0382166105b357604051634b637e8f60e11b815260006004820152602401610425565b610398826000836106e6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841661063b5760405163e602df0560e01b815260006004820152602401610425565b6001600160a01b03831661066557604051634a1406b160e11b815260006004820152602401610425565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104c157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106d891815260200190565b60405180910390a350505050565b6001600160a01b0383166107115780600260008282546107069190610989565b909155506107839050565b6001600160a01b038316600090815260208190526040902054818110156107645760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610425565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661079f576002805482900390556107be565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161080391815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561083e5760208186018101516040868401015201610821565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461087557600080fd5b919050565b6000806040838503121561088d57600080fd5b6108968361085e565b946020939093013593505050565b6000806000606084860312156108b957600080fd5b6108c28461085e565b92506108d06020850161085e565b929592945050506040919091013590565b6000602082840312156108f357600080fd5b5035919050565b60006020828403121561090c57600080fd5b6109158261085e565b9392505050565b6000806040838503121561092f57600080fd5b6109388361085e565b91506109466020840161085e565b90509250929050565b600181811c9082168061096357607f821691505b60208210810361098357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561035c57634e487b7160e01b600052601160045260246000fdfea26469706673582212206957db4e7676bbd3ac194c5025ea0ab739dcd4ca5a8a99e819b55039d967636c64736f6c634300081a0033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"2ff2e9dc": "INITIAL_SUPPLY()",
		"dd62ed3e": "allowance(address,address)",
		"095ea7b3": "approve(address,uint256)",
		"70a08231": "balanceOf(address)",
		"42966c68": "burn(uint256)",
		"79cc6790": "burnFrom(address,uint256)",
		"59dc2dd2": "burnFromAccount(address,uint256)",
		"313ce567": "decimals()",
		"81a4a6d8": "getInitialSupply()",
		"40c10f19": "mint(address,uint256)",
		"06fdde03": "name()",
		"8da5cb5b": "owner()",
		"715018a6": "renounceOwnership()",
		"95d89b41": "symbol()",
		"18160ddd": "totalSupply()",
		"a9059cbb": "transfer(address,uint256)",
		"23b872dd": "transferFrom(address,address,uint256)",
		"f2fde38b": "transferOwnership(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "505600",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"INITIAL_SUPPLY()": "218",
			"allowance(address,address)": "infinite",
			"approve(address,uint256)": "22662",
			"balanceOf(address)": "1263",
			"burn(uint256)": "44210",
			"burnFrom(address,uint256)": "infinite",
			"burnFromAccount(address,uint256)": "infinite",
			"decimals()": "222",
			"getInitialSupply()": "281",
			"mint(address,uint256)": "infinite",
			"name()": "infinite",
			"owner()": "1023",
			"renounceOwnership()": "infinite",
			"symbol()": "infinite",
			"totalSupply()": "1049",
			"transfer(address,uint256)": "44488",
			"transferFrom(address,address,uint256)": "infinite",
			"transferOwnership(address)": "23746"
		}
	},
	"devdoc": {
		"errors": {
			"ERC20InsufficientAllowance(address,uint256,uint256)": [
				{
					"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
					"params": {
						"allowance": "Amount of tokens a `spender` is allowed to operate with.",
						"needed": "Minimum amount required to perform a transfer.",
						"spender": "Address that may be allowed to operate on tokens without being their owner."
					}
				}
			],
			"ERC20InsufficientBalance(address,uint256,uint256)": [
				{
					"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
					"params": {
						"balance": "Current balance for the interacting account.",
						"needed": "Minimum amount required to perform a transfer.",
						"sender": "Address whose tokens are being transferred."
					}
				}
			],
			"ERC20InvalidApprover(address)": [
				{
					"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
					"params": {
						"approver": "Address initiating an approval operation."
					}
				}
			],
			"ERC20InvalidReceiver(address)": [
				{
					"details": "Indicates a failure with the token `receiver`. Used in transfers.",
					"params": {
						"receiver": "Address to which tokens are being transferred."
					}
				}
			],
			"ERC20InvalidSender(address)": [
				{
					"details": "Indicates a failure with the token `sender`. Used in transfers.",
					"params": {
						"sender": "Address whose tokens are being transferred."
					}
				}
			],
			"ERC20InvalidSpender(address)": [
				{
					"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
					"params": {
						"spender": "Address that may be allowed to operate on tokens without being their owner."
					}
				}
			],
			"OwnableInvalidOwner(address)": [
				{
					"details": "The owner is not a valid owner account. (eg. `address(0)`)"
				}
			],
			"OwnableUnauthorizedAccount(address)": [
				{
					"details": "The caller account is not authorized to perform an operation."
				}
			]
		},
		"events": {
			"Approval(address,address,uint256)": {
				"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
			},
			"Transfer(address,address,uint256)": {
				"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
			}
		},
		"kind": "dev",
		"methods": {
			"allowance(address,address)": {
				"details": "See {IERC20-allowance}."
			},
			"approve(address,uint256)": {
				"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
			},
			"balanceOf(address)": {
				"details": "See {IERC20-balanceOf}."
			},
			"burn(uint256)": {
				"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
			},
			"burnFrom(address,uint256)": {
				"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
			},
			"decimals()": {
				"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
			},
			"name()": {
				"details": "Returns the name of the token."
			},
			"owner()": {
				"details": "Returns the address of the current owner."
			},
			"renounceOwnership()": {
				"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
			},
			"symbol()": {
				"details": "Returns the symbol of the token, usually a shorter version of the name."
			},
			"totalSupply()": {
				"details": "See {IERC20-totalSupply}."
			},
			"transfer(address,uint256)": {
				"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
			},
			"transferFrom(address,address,uint256)": {
				"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
			},
			"transferOwnership(address)": {
				"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@INITIAL_SUPPLY_997": {
				"entryPoint": null,
				"id": 997,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_approve_690": {
				"entryPoint": 1079,
				"id": 690,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_approve_750": {
				"entryPoint": 1553,
				"id": 750,
				"parameterSlots": 4,
				"returnSlots": 0
			},
			"@_burn_672": {
				"entryPoint": 1417,
				"id": 672,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_checkOwner_84": {
				"entryPoint": 1318,
				"id": 84,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_mint_639": {
				"entryPoint": 1363,
				"id": 639,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_msgSender_961": {
				"entryPoint": null,
				"id": 961,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_spendAllowance_798": {
				"entryPoint": 1097,
				"id": 798,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_transferOwnership_146": {
				"entryPoint": 1471,
				"id": 146,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_transfer_529": {
				"entryPoint": 1223,
				"id": 529,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_update_606": {
				"entryPoint": 1766,
				"id": 606,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@allowance_426": {
				"entryPoint": null,
				"id": 426,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@approve_450": {
				"entryPoint": 840,
				"id": 450,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@balanceOf_385": {
				"entryPoint": null,
				"id": 385,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@burnFromAccount_1045": {
				"entryPoint": 937,
				"id": 1045,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@burnFrom_922": {
				"entryPoint": 975,
				"id": 922,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@burn_901": {
				"entryPoint": 924,
				"id": 901,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@decimals_363": {
				"entryPoint": null,
				"id": 363,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@getInitialSupply_1053": {
				"entryPoint": null,
				"id": 1053,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@mint_1030": {
				"entryPoint": 902,
				"id": 1030,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@name_345": {
				"entryPoint": 694,
				"id": 345,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@owner_67": {
				"entryPoint": null,
				"id": 67,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@renounceOwnership_98": {
				"entryPoint": 955,
				"id": 98,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@symbol_354": {
				"entryPoint": 986,
				"id": 354,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@totalSupply_372": {
				"entryPoint": null,
				"id": 372,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@transferFrom_482": {
				"entryPoint": 866,
				"id": 482,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@transferOwnership_126": {
				"entryPoint": 1015,
				"id": 126,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@transfer_409": {
				"entryPoint": 1001,
				"id": 409,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_address": {
				"entryPoint": 2142,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 2298,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_address": {
				"entryPoint": 2332,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_addresst_uint256": {
				"entryPoint": 2212,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 2170,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_uint256": {
				"entryPoint": 2273,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 2064,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 2441,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"extract_byte_array_length": {
				"entryPoint": 2383,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:3825:8",
					"nodeType": "YulBlock",
					"src": "0:3825:8",
					"statements": [
						{
							"nativeSrc": "6:3:8",
							"nodeType": "YulBlock",
							"src": "6:3:8",
							"statements": []
						},
						{
							"body": {
								"nativeSrc": "135:406:8",
								"nodeType": "YulBlock",
								"src": "135:406:8",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "152:9:8",
													"nodeType": "YulIdentifier",
													"src": "152:9:8"
												},
												{
													"kind": "number",
													"nativeSrc": "163:2:8",
													"nodeType": "YulLiteral",
													"src": "163:2:8",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "145:6:8",
												"nodeType": "YulIdentifier",
												"src": "145:6:8"
											},
											"nativeSrc": "145:21:8",
											"nodeType": "YulFunctionCall",
											"src": "145:21:8"
										},
										"nativeSrc": "145:21:8",
										"nodeType": "YulExpressionStatement",
										"src": "145:21:8"
									},
									{
										"nativeSrc": "175:27:8",
										"nodeType": "YulVariableDeclaration",
										"src": "175:27:8",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "195:6:8",
													"nodeType": "YulIdentifier",
													"src": "195:6:8"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "189:5:8",
												"nodeType": "YulIdentifier",
												"src": "189:5:8"
											},
											"nativeSrc": "189:13:8",
											"nodeType": "YulFunctionCall",
											"src": "189:13:8"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "179:6:8",
												"nodeType": "YulTypedName",
												"src": "179:6:8",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "222:9:8",
															"nodeType": "YulIdentifier",
															"src": "222:9:8"
														},
														{
															"kind": "number",
															"nativeSrc": "233:2:8",
															"nodeType": "YulLiteral",
															"src": "233:2:8",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "218:3:8",
														"nodeType": "YulIdentifier",
														"src": "218:3:8"
													},
													"nativeSrc": "218:18:8",
													"nodeType": "YulFunctionCall",
													"src": "218:18:8"
												},
												{
													"name": "length",
													"nativeSrc": "238:6:8",
													"nodeType": "YulIdentifier",
													"src": "238:6:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "211:6:8",
												"nodeType": "YulIdentifier",
												"src": "211:6:8"
											},
											"nativeSrc": "211:34:8",
											"nodeType": "YulFunctionCall",
											"src": "211:34:8"
										},
										"nativeSrc": "211:34:8",
										"nodeType": "YulExpressionStatement",
										"src": "211:34:8"
									},
									{
										"nativeSrc": "254:10:8",
										"nodeType": "YulVariableDeclaration",
										"src": "254:10:8",
										"value": {
											"kind": "number",
											"nativeSrc": "263:1:8",
											"nodeType": "YulLiteral",
											"src": "263:1:8",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "i",
												"nativeSrc": "258:1:8",
												"nodeType": "YulTypedName",
												"src": "258:1:8",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "323:90:8",
											"nodeType": "YulBlock",
											"src": "323:90:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "352:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "352:9:8"
																			},
																			{
																				"name": "i",
																				"nativeSrc": "363:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "363:1:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "348:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "348:3:8"
																		},
																		"nativeSrc": "348:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "348:17:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "367:2:8",
																		"nodeType": "YulLiteral",
																		"src": "367:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "344:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "344:3:8"
																},
																"nativeSrc": "344:26:8",
																"nodeType": "YulFunctionCall",
																"src": "344:26:8"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "386:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "386:6:8"
																					},
																					{
																						"name": "i",
																						"nativeSrc": "394:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "394:1:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "382:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "382:3:8"
																				},
																				"nativeSrc": "382:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "382:14:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "398:2:8",
																				"nodeType": "YulLiteral",
																				"src": "398:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "378:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "378:3:8"
																		},
																		"nativeSrc": "378:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "378:23:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "372:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "372:5:8"
																},
																"nativeSrc": "372:30:8",
																"nodeType": "YulFunctionCall",
																"src": "372:30:8"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "337:6:8",
															"nodeType": "YulIdentifier",
															"src": "337:6:8"
														},
														"nativeSrc": "337:66:8",
														"nodeType": "YulFunctionCall",
														"src": "337:66:8"
													},
													"nativeSrc": "337:66:8",
													"nodeType": "YulExpressionStatement",
													"src": "337:66:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nativeSrc": "284:1:8",
													"nodeType": "YulIdentifier",
													"src": "284:1:8"
												},
												{
													"name": "length",
													"nativeSrc": "287:6:8",
													"nodeType": "YulIdentifier",
													"src": "287:6:8"
												}
											],
											"functionName": {
												"name": "lt",
												"nativeSrc": "281:2:8",
												"nodeType": "YulIdentifier",
												"src": "281:2:8"
											},
											"nativeSrc": "281:13:8",
											"nodeType": "YulFunctionCall",
											"src": "281:13:8"
										},
										"nativeSrc": "273:140:8",
										"nodeType": "YulForLoop",
										"post": {
											"nativeSrc": "295:19:8",
											"nodeType": "YulBlock",
											"src": "295:19:8",
											"statements": [
												{
													"nativeSrc": "297:15:8",
													"nodeType": "YulAssignment",
													"src": "297:15:8",
													"value": {
														"arguments": [
															{
																"name": "i",
																"nativeSrc": "306:1:8",
																"nodeType": "YulIdentifier",
																"src": "306:1:8"
															},
															{
																"kind": "number",
																"nativeSrc": "309:2:8",
																"nodeType": "YulLiteral",
																"src": "309:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "302:3:8",
															"nodeType": "YulIdentifier",
															"src": "302:3:8"
														},
														"nativeSrc": "302:10:8",
														"nodeType": "YulFunctionCall",
														"src": "302:10:8"
													},
													"variableNames": [
														{
															"name": "i",
															"nativeSrc": "297:1:8",
															"nodeType": "YulIdentifier",
															"src": "297:1:8"
														}
													]
												}
											]
										},
										"pre": {
											"nativeSrc": "277:3:8",
											"nodeType": "YulBlock",
											"src": "277:3:8",
											"statements": []
										},
										"src": "273:140:8"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "437:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "437:9:8"
																},
																{
																	"name": "length",
																	"nativeSrc": "448:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "448:6:8"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "433:3:8",
																"nodeType": "YulIdentifier",
																"src": "433:3:8"
															},
															"nativeSrc": "433:22:8",
															"nodeType": "YulFunctionCall",
															"src": "433:22:8"
														},
														{
															"kind": "number",
															"nativeSrc": "457:2:8",
															"nodeType": "YulLiteral",
															"src": "457:2:8",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "429:3:8",
														"nodeType": "YulIdentifier",
														"src": "429:3:8"
													},
													"nativeSrc": "429:31:8",
													"nodeType": "YulFunctionCall",
													"src": "429:31:8"
												},
												{
													"kind": "number",
													"nativeSrc": "462:1:8",
													"nodeType": "YulLiteral",
													"src": "462:1:8",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "422:6:8",
												"nodeType": "YulIdentifier",
												"src": "422:6:8"
											},
											"nativeSrc": "422:42:8",
											"nodeType": "YulFunctionCall",
											"src": "422:42:8"
										},
										"nativeSrc": "422:42:8",
										"nodeType": "YulExpressionStatement",
										"src": "422:42:8"
									},
									{
										"nativeSrc": "473:62:8",
										"nodeType": "YulAssignment",
										"src": "473:62:8",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "489:9:8",
															"nodeType": "YulIdentifier",
															"src": "489:9:8"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "length",
																			"nativeSrc": "508:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "508:6:8"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "516:2:8",
																			"nodeType": "YulLiteral",
																			"src": "516:2:8",
																			"type": "",
																			"value": "31"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nativeSrc": "504:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "504:3:8"
																	},
																	"nativeSrc": "504:15:8",
																	"nodeType": "YulFunctionCall",
																	"src": "504:15:8"
																},
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "525:2:8",
																			"nodeType": "YulLiteral",
																			"src": "525:2:8",
																			"type": "",
																			"value": "31"
																		}
																	],
																	"functionName": {
																		"name": "not",
																		"nativeSrc": "521:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "521:3:8"
																	},
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulFunctionCall",
																	"src": "521:7:8"
																}
															],
															"functionName": {
																"name": "and",
																"nativeSrc": "500:3:8",
																"nodeType": "YulIdentifier",
																"src": "500:3:8"
															},
															"nativeSrc": "500:29:8",
															"nodeType": "YulFunctionCall",
															"src": "500:29:8"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "485:3:8",
														"nodeType": "YulIdentifier",
														"src": "485:3:8"
													},
													"nativeSrc": "485:45:8",
													"nodeType": "YulFunctionCall",
													"src": "485:45:8"
												},
												{
													"kind": "number",
													"nativeSrc": "532:2:8",
													"nodeType": "YulLiteral",
													"src": "532:2:8",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "481:3:8",
												"nodeType": "YulIdentifier",
												"src": "481:3:8"
											},
											"nativeSrc": "481:54:8",
											"nodeType": "YulFunctionCall",
											"src": "481:54:8"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "473:4:8",
												"nodeType": "YulIdentifier",
												"src": "473:4:8"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "14:527:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "104:9:8",
									"nodeType": "YulTypedName",
									"src": "104:9:8",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "115:6:8",
									"nodeType": "YulTypedName",
									"src": "115:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "126:4:8",
									"nodeType": "YulTypedName",
									"src": "126:4:8",
									"type": ""
								}
							],
							"src": "14:527:8"
						},
						{
							"body": {
								"nativeSrc": "595:124:8",
								"nodeType": "YulBlock",
								"src": "595:124:8",
								"statements": [
									{
										"nativeSrc": "605:29:8",
										"nodeType": "YulAssignment",
										"src": "605:29:8",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "627:6:8",
													"nodeType": "YulIdentifier",
													"src": "627:6:8"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "614:12:8",
												"nodeType": "YulIdentifier",
												"src": "614:12:8"
											},
											"nativeSrc": "614:20:8",
											"nodeType": "YulFunctionCall",
											"src": "614:20:8"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "605:5:8",
												"nodeType": "YulIdentifier",
												"src": "605:5:8"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "697:16:8",
											"nodeType": "YulBlock",
											"src": "697:16:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "706:1:8",
																"nodeType": "YulLiteral",
																"src": "706:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "709:1:8",
																"nodeType": "YulLiteral",
																"src": "709:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "699:6:8",
															"nodeType": "YulIdentifier",
															"src": "699:6:8"
														},
														"nativeSrc": "699:12:8",
														"nodeType": "YulFunctionCall",
														"src": "699:12:8"
													},
													"nativeSrc": "699:12:8",
													"nodeType": "YulExpressionStatement",
													"src": "699:12:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "656:5:8",
															"nodeType": "YulIdentifier",
															"src": "656:5:8"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "667:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "667:5:8"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "682:3:8",
																					"nodeType": "YulLiteral",
																					"src": "682:3:8",
																					"type": "",
																					"value": "160"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "687:1:8",
																					"nodeType": "YulLiteral",
																					"src": "687:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "678:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "678:3:8"
																			},
																			"nativeSrc": "678:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "678:11:8"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "691:1:8",
																			"nodeType": "YulLiteral",
																			"src": "691:1:8",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "sub",
																		"nativeSrc": "674:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "674:3:8"
																	},
																	"nativeSrc": "674:19:8",
																	"nodeType": "YulFunctionCall",
																	"src": "674:19:8"
																}
															],
															"functionName": {
																"name": "and",
																"nativeSrc": "663:3:8",
																"nodeType": "YulIdentifier",
																"src": "663:3:8"
															},
															"nativeSrc": "663:31:8",
															"nodeType": "YulFunctionCall",
															"src": "663:31:8"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "653:2:8",
														"nodeType": "YulIdentifier",
														"src": "653:2:8"
													},
													"nativeSrc": "653:42:8",
													"nodeType": "YulFunctionCall",
													"src": "653:42:8"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "646:6:8",
												"nodeType": "YulIdentifier",
												"src": "646:6:8"
											},
											"nativeSrc": "646:50:8",
											"nodeType": "YulFunctionCall",
											"src": "646:50:8"
										},
										"nativeSrc": "643:70:8",
										"nodeType": "YulIf",
										"src": "643:70:8"
									}
								]
							},
							"name": "abi_decode_address",
							"nativeSrc": "546:173:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "574:6:8",
									"nodeType": "YulTypedName",
									"src": "574:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "585:5:8",
									"nodeType": "YulTypedName",
									"src": "585:5:8",
									"type": ""
								}
							],
							"src": "546:173:8"
						},
						{
							"body": {
								"nativeSrc": "811:213:8",
								"nodeType": "YulBlock",
								"src": "811:213:8",
								"statements": [
									{
										"body": {
											"nativeSrc": "857:16:8",
											"nodeType": "YulBlock",
											"src": "857:16:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "866:1:8",
																"nodeType": "YulLiteral",
																"src": "866:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "869:1:8",
																"nodeType": "YulLiteral",
																"src": "869:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "859:6:8",
															"nodeType": "YulIdentifier",
															"src": "859:6:8"
														},
														"nativeSrc": "859:12:8",
														"nodeType": "YulFunctionCall",
														"src": "859:12:8"
													},
													"nativeSrc": "859:12:8",
													"nodeType": "YulExpressionStatement",
													"src": "859:12:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "832:7:8",
															"nodeType": "YulIdentifier",
															"src": "832:7:8"
														},
														{
															"name": "headStart",
															"nativeSrc": "841:9:8",
															"nodeType": "YulIdentifier",
															"src": "841:9:8"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "828:3:8",
														"nodeType": "YulIdentifier",
														"src": "828:3:8"
													},
													"nativeSrc": "828:23:8",
													"nodeType": "YulFunctionCall",
													"src": "828:23:8"
												},
												{
													"kind": "number",
													"nativeSrc": "853:2:8",
													"nodeType": "YulLiteral",
													"src": "853:2:8",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "824:3:8",
												"nodeType": "YulIdentifier",
												"src": "824:3:8"
											},
											"nativeSrc": "824:32:8",
											"nodeType": "YulFunctionCall",
											"src": "824:32:8"
										},
										"nativeSrc": "821:52:8",
										"nodeType": "YulIf",
										"src": "821:52:8"
									},
									{
										"nativeSrc": "882:39:8",
										"nodeType": "YulAssignment",
										"src": "882:39:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "911:9:8",
													"nodeType": "YulIdentifier",
													"src": "911:9:8"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "892:18:8",
												"nodeType": "YulIdentifier",
												"src": "892:18:8"
											},
											"nativeSrc": "892:29:8",
											"nodeType": "YulFunctionCall",
											"src": "892:29:8"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "882:6:8",
												"nodeType": "YulIdentifier",
												"src": "882:6:8"
											}
										]
									},
									{
										"nativeSrc": "930:14:8",
										"nodeType": "YulVariableDeclaration",
										"src": "930:14:8",
										"value": {
											"kind": "number",
											"nativeSrc": "943:1:8",
											"nodeType": "YulLiteral",
											"src": "943:1:8",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "value",
												"nativeSrc": "934:5:8",
												"nodeType": "YulTypedName",
												"src": "934:5:8",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "953:41:8",
										"nodeType": "YulAssignment",
										"src": "953:41:8",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "979:9:8",
															"nodeType": "YulIdentifier",
															"src": "979:9:8"
														},
														{
															"kind": "number",
															"nativeSrc": "990:2:8",
															"nodeType": "YulLiteral",
															"src": "990:2:8",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "975:3:8",
														"nodeType": "YulIdentifier",
														"src": "975:3:8"
													},
													"nativeSrc": "975:18:8",
													"nodeType": "YulFunctionCall",
													"src": "975:18:8"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "962:12:8",
												"nodeType": "YulIdentifier",
												"src": "962:12:8"
											},
											"nativeSrc": "962:32:8",
											"nodeType": "YulFunctionCall",
											"src": "962:32:8"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "953:5:8",
												"nodeType": "YulIdentifier",
												"src": "953:5:8"
											}
										]
									},
									{
										"nativeSrc": "1003:15:8",
										"nodeType": "YulAssignment",
										"src": "1003:15:8",
										"value": {
											"name": "value",
											"nativeSrc": "1013:5:8",
											"nodeType": "YulIdentifier",
											"src": "1013:5:8"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "1003:6:8",
												"nodeType": "YulIdentifier",
												"src": "1003:6:8"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nativeSrc": "724:300:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "769:9:8",
									"nodeType": "YulTypedName",
									"src": "769:9:8",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "780:7:8",
									"nodeType": "YulTypedName",
									"src": "780:7:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "792:6:8",
									"nodeType": "YulTypedName",
									"src": "792:6:8",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "800:6:8",
									"nodeType": "YulTypedName",
									"src": "800:6:8",
									"type": ""
								}
							],
							"src": "724:300:8"
						},
						{
							"body": {
								"nativeSrc": "1124:92:8",
								"nodeType": "YulBlock",
								"src": "1124:92:8",
								"statements": [
									{
										"nativeSrc": "1134:26:8",
										"nodeType": "YulAssignment",
										"src": "1134:26:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1146:9:8",
													"nodeType": "YulIdentifier",
													"src": "1146:9:8"
												},
												{
													"kind": "number",
													"nativeSrc": "1157:2:8",
													"nodeType": "YulLiteral",
													"src": "1157:2:8",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1142:3:8",
												"nodeType": "YulIdentifier",
												"src": "1142:3:8"
											},
											"nativeSrc": "1142:18:8",
											"nodeType": "YulFunctionCall",
											"src": "1142:18:8"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1134:4:8",
												"nodeType": "YulIdentifier",
												"src": "1134:4:8"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1176:9:8",
													"nodeType": "YulIdentifier",
													"src": "1176:9:8"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value0",
																	"nativeSrc": "1201:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1201:6:8"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "1194:6:8",
																"nodeType": "YulIdentifier",
																"src": "1194:6:8"
															},
															"nativeSrc": "1194:14:8",
															"nodeType": "YulFunctionCall",
															"src": "1194:14:8"
														}
													],
													"functionName": {
														"name": "iszero",
														"nativeSrc": "1187:6:8",
														"nodeType": "YulIdentifier",
														"src": "1187:6:8"
													},
													"nativeSrc": "1187:22:8",
													"nodeType": "YulFunctionCall",
													"src": "1187:22:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1169:6:8",
												"nodeType": "YulIdentifier",
												"src": "1169:6:8"
											},
											"nativeSrc": "1169:41:8",
											"nodeType": "YulFunctionCall",
											"src": "1169:41:8"
										},
										"nativeSrc": "1169:41:8",
										"nodeType": "YulExpressionStatement",
										"src": "1169:41:8"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nativeSrc": "1029:187:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1093:9:8",
									"nodeType": "YulTypedName",
									"src": "1093:9:8",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1104:6:8",
									"nodeType": "YulTypedName",
									"src": "1104:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1115:4:8",
									"nodeType": "YulTypedName",
									"src": "1115:4:8",
									"type": ""
								}
							],
							"src": "1029:187:8"
						},
						{
							"body": {
								"nativeSrc": "1322:76:8",
								"nodeType": "YulBlock",
								"src": "1322:76:8",
								"statements": [
									{
										"nativeSrc": "1332:26:8",
										"nodeType": "YulAssignment",
										"src": "1332:26:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1344:9:8",
													"nodeType": "YulIdentifier",
													"src": "1344:9:8"
												},
												{
													"kind": "number",
													"nativeSrc": "1355:2:8",
													"nodeType": "YulLiteral",
													"src": "1355:2:8",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1340:3:8",
												"nodeType": "YulIdentifier",
												"src": "1340:3:8"
											},
											"nativeSrc": "1340:18:8",
											"nodeType": "YulFunctionCall",
											"src": "1340:18:8"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1332:4:8",
												"nodeType": "YulIdentifier",
												"src": "1332:4:8"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1374:9:8",
													"nodeType": "YulIdentifier",
													"src": "1374:9:8"
												},
												{
													"name": "value0",
													"nativeSrc": "1385:6:8",
													"nodeType": "YulIdentifier",
													"src": "1385:6:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1367:6:8",
												"nodeType": "YulIdentifier",
												"src": "1367:6:8"
											},
											"nativeSrc": "1367:25:8",
											"nodeType": "YulFunctionCall",
											"src": "1367:25:8"
										},
										"nativeSrc": "1367:25:8",
										"nodeType": "YulExpressionStatement",
										"src": "1367:25:8"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "1221:177:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1291:9:8",
									"nodeType": "YulTypedName",
									"src": "1291:9:8",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1302:6:8",
									"nodeType": "YulTypedName",
									"src": "1302:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1313:4:8",
									"nodeType": "YulTypedName",
									"src": "1313:4:8",
									"type": ""
								}
							],
							"src": "1221:177:8"
						},
						{
							"body": {
								"nativeSrc": "1507:270:8",
								"nodeType": "YulBlock",
								"src": "1507:270:8",
								"statements": [
									{
										"body": {
											"nativeSrc": "1553:16:8",
											"nodeType": "YulBlock",
											"src": "1553:16:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1562:1:8",
																"nodeType": "YulLiteral",
																"src": "1562:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1565:1:8",
																"nodeType": "YulLiteral",
																"src": "1565:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1555:6:8",
															"nodeType": "YulIdentifier",
															"src": "1555:6:8"
														},
														"nativeSrc": "1555:12:8",
														"nodeType": "YulFunctionCall",
														"src": "1555:12:8"
													},
													"nativeSrc": "1555:12:8",
													"nodeType": "YulExpressionStatement",
													"src": "1555:12:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "1528:7:8",
															"nodeType": "YulIdentifier",
															"src": "1528:7:8"
														},
														{
															"name": "headStart",
															"nativeSrc": "1537:9:8",
															"nodeType": "YulIdentifier",
															"src": "1537:9:8"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1524:3:8",
														"nodeType": "YulIdentifier",
														"src": "1524:3:8"
													},
													"nativeSrc": "1524:23:8",
													"nodeType": "YulFunctionCall",
													"src": "1524:23:8"
												},
												{
													"kind": "number",
													"nativeSrc": "1549:2:8",
													"nodeType": "YulLiteral",
													"src": "1549:2:8",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "1520:3:8",
												"nodeType": "YulIdentifier",
												"src": "1520:3:8"
											},
											"nativeSrc": "1520:32:8",
											"nodeType": "YulFunctionCall",
											"src": "1520:32:8"
										},
										"nativeSrc": "1517:52:8",
										"nodeType": "YulIf",
										"src": "1517:52:8"
									},
									{
										"nativeSrc": "1578:39:8",
										"nodeType": "YulAssignment",
										"src": "1578:39:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1607:9:8",
													"nodeType": "YulIdentifier",
													"src": "1607:9:8"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "1588:18:8",
												"nodeType": "YulIdentifier",
												"src": "1588:18:8"
											},
											"nativeSrc": "1588:29:8",
											"nodeType": "YulFunctionCall",
											"src": "1588:29:8"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "1578:6:8",
												"nodeType": "YulIdentifier",
												"src": "1578:6:8"
											}
										]
									},
									{
										"nativeSrc": "1626:48:8",
										"nodeType": "YulAssignment",
										"src": "1626:48:8",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1659:9:8",
															"nodeType": "YulIdentifier",
															"src": "1659:9:8"
														},
														{
															"kind": "number",
															"nativeSrc": "1670:2:8",
															"nodeType": "YulLiteral",
															"src": "1670:2:8",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1655:3:8",
														"nodeType": "YulIdentifier",
														"src": "1655:3:8"
													},
													"nativeSrc": "1655:18:8",
													"nodeType": "YulFunctionCall",
													"src": "1655:18:8"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "1636:18:8",
												"nodeType": "YulIdentifier",
												"src": "1636:18:8"
											},
											"nativeSrc": "1636:38:8",
											"nodeType": "YulFunctionCall",
											"src": "1636:38:8"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "1626:6:8",
												"nodeType": "YulIdentifier",
												"src": "1626:6:8"
											}
										]
									},
									{
										"nativeSrc": "1683:14:8",
										"nodeType": "YulVariableDeclaration",
										"src": "1683:14:8",
										"value": {
											"kind": "number",
											"nativeSrc": "1696:1:8",
											"nodeType": "YulLiteral",
											"src": "1696:1:8",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "value",
												"nativeSrc": "1687:5:8",
												"nodeType": "YulTypedName",
												"src": "1687:5:8",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1706:41:8",
										"nodeType": "YulAssignment",
										"src": "1706:41:8",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1732:9:8",
															"nodeType": "YulIdentifier",
															"src": "1732:9:8"
														},
														{
															"kind": "number",
															"nativeSrc": "1743:2:8",
															"nodeType": "YulLiteral",
															"src": "1743:2:8",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1728:3:8",
														"nodeType": "YulIdentifier",
														"src": "1728:3:8"
													},
													"nativeSrc": "1728:18:8",
													"nodeType": "YulFunctionCall",
													"src": "1728:18:8"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "1715:12:8",
												"nodeType": "YulIdentifier",
												"src": "1715:12:8"
											},
											"nativeSrc": "1715:32:8",
											"nodeType": "YulFunctionCall",
											"src": "1715:32:8"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1706:5:8",
												"nodeType": "YulIdentifier",
												"src": "1706:5:8"
											}
										]
									},
									{
										"nativeSrc": "1756:15:8",
										"nodeType": "YulAssignment",
										"src": "1756:15:8",
										"value": {
											"name": "value",
											"nativeSrc": "1766:5:8",
											"nodeType": "YulIdentifier",
											"src": "1766:5:8"
										},
										"variableNames": [
											{
												"name": "value2",
												"nativeSrc": "1756:6:8",
												"nodeType": "YulIdentifier",
												"src": "1756:6:8"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_addresst_uint256",
							"nativeSrc": "1403:374:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1457:9:8",
									"nodeType": "YulTypedName",
									"src": "1457:9:8",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "1468:7:8",
									"nodeType": "YulTypedName",
									"src": "1468:7:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "1480:6:8",
									"nodeType": "YulTypedName",
									"src": "1480:6:8",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "1488:6:8",
									"nodeType": "YulTypedName",
									"src": "1488:6:8",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "1496:6:8",
									"nodeType": "YulTypedName",
									"src": "1496:6:8",
									"type": ""
								}
							],
							"src": "1403:374:8"
						},
						{
							"body": {
								"nativeSrc": "1879:87:8",
								"nodeType": "YulBlock",
								"src": "1879:87:8",
								"statements": [
									{
										"nativeSrc": "1889:26:8",
										"nodeType": "YulAssignment",
										"src": "1889:26:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1901:9:8",
													"nodeType": "YulIdentifier",
													"src": "1901:9:8"
												},
												{
													"kind": "number",
													"nativeSrc": "1912:2:8",
													"nodeType": "YulLiteral",
													"src": "1912:2:8",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1897:3:8",
												"nodeType": "YulIdentifier",
												"src": "1897:3:8"
											},
											"nativeSrc": "1897:18:8",
											"nodeType": "YulFunctionCall",
											"src": "1897:18:8"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1889:4:8",
												"nodeType": "YulIdentifier",
												"src": "1889:4:8"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1931:9:8",
													"nodeType": "YulIdentifier",
													"src": "1931:9:8"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "1946:6:8",
															"nodeType": "YulIdentifier",
															"src": "1946:6:8"
														},
														{
															"kind": "number",
															"nativeSrc": "1954:4:8",
															"nodeType": "YulLiteral",
															"src": "1954:4:8",
															"type": "",
															"value": "0xff"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "1942:3:8",
														"nodeType": "YulIdentifier",
														"src": "1942:3:8"
													},
													"nativeSrc": "1942:17:8",
													"nodeType": "YulFunctionCall",
													"src": "1942:17:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1924:6:8",
												"nodeType": "YulIdentifier",
												"src": "1924:6:8"
											},
											"nativeSrc": "1924:36:8",
											"nodeType": "YulFunctionCall",
											"src": "1924:36:8"
										},
										"nativeSrc": "1924:36:8",
										"nodeType": "YulExpressionStatement",
										"src": "1924:36:8"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
							"nativeSrc": "1782:184:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1848:9:8",
									"nodeType": "YulTypedName",
									"src": "1848:9:8",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1859:6:8",
									"nodeType": "YulTypedName",
									"src": "1859:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1870:4:8",
									"nodeType": "YulTypedName",
									"src": "1870:4:8",
									"type": ""
								}
							],
							"src": "1782:184:8"
						},
						{
							"body": {
								"nativeSrc": "2041:156:8",
								"nodeType": "YulBlock",
								"src": "2041:156:8",
								"statements": [
									{
										"body": {
											"nativeSrc": "2087:16:8",
											"nodeType": "YulBlock",
											"src": "2087:16:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2096:1:8",
																"nodeType": "YulLiteral",
																"src": "2096:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "2099:1:8",
																"nodeType": "YulLiteral",
																"src": "2099:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "2089:6:8",
															"nodeType": "YulIdentifier",
															"src": "2089:6:8"
														},
														"nativeSrc": "2089:12:8",
														"nodeType": "YulFunctionCall",
														"src": "2089:12:8"
													},
													"nativeSrc": "2089:12:8",
													"nodeType": "YulExpressionStatement",
													"src": "2089:12:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "2062:7:8",
															"nodeType": "YulIdentifier",
															"src": "2062:7:8"
														},
														{
															"name": "headStart",
															"nativeSrc": "2071:9:8",
															"nodeType": "YulIdentifier",
															"src": "2071:9:8"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2058:3:8",
														"nodeType": "YulIdentifier",
														"src": "2058:3:8"
													},
													"nativeSrc": "2058:23:8",
													"nodeType": "YulFunctionCall",
													"src": "2058:23:8"
												},
												{
													"kind": "number",
													"nativeSrc": "2083:2:8",
													"nodeType": "YulLiteral",
													"src": "2083:2:8",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "2054:3:8",
												"nodeType": "YulIdentifier",
												"src": "2054:3:8"
											},
											"nativeSrc": "2054:32:8",
											"nodeType": "YulFunctionCall",
											"src": "2054:32:8"
										},
										"nativeSrc": "2051:52:8",
										"nodeType": "YulIf",
										"src": "2051:52:8"
									},
									{
										"nativeSrc": "2112:14:8",
										"nodeType": "YulVariableDeclaration",
										"src": "2112:14:8",
										"value": {
											"kind": "number",
											"nativeSrc": "2125:1:8",
											"nodeType": "YulLiteral",
											"src": "2125:1:8",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "value",
												"nativeSrc": "2116:5:8",
												"nodeType": "YulTypedName",
												"src": "2116:5:8",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "2135:32:8",
										"nodeType": "YulAssignment",
										"src": "2135:32:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2157:9:8",
													"nodeType": "YulIdentifier",
													"src": "2157:9:8"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2144:12:8",
												"nodeType": "YulIdentifier",
												"src": "2144:12:8"
											},
											"nativeSrc": "2144:23:8",
											"nodeType": "YulFunctionCall",
											"src": "2144:23:8"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "2135:5:8",
												"nodeType": "YulIdentifier",
												"src": "2135:5:8"
											}
										]
									},
									{
										"nativeSrc": "2176:15:8",
										"nodeType": "YulAssignment",
										"src": "2176:15:8",
										"value": {
											"name": "value",
											"nativeSrc": "2186:5:8",
											"nodeType": "YulIdentifier",
											"src": "2186:5:8"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "2176:6:8",
												"nodeType": "YulIdentifier",
												"src": "2176:6:8"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256",
							"nativeSrc": "1971:226:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2007:9:8",
									"nodeType": "YulTypedName",
									"src": "2007:9:8",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "2018:7:8",
									"nodeType": "YulTypedName",
									"src": "2018:7:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "2030:6:8",
									"nodeType": "YulTypedName",
									"src": "2030:6:8",
									"type": ""
								}
							],
							"src": "1971:226:8"
						},
						{
							"body": {
								"nativeSrc": "2272:116:8",
								"nodeType": "YulBlock",
								"src": "2272:116:8",
								"statements": [
									{
										"body": {
											"nativeSrc": "2318:16:8",
											"nodeType": "YulBlock",
											"src": "2318:16:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2327:1:8",
																"nodeType": "YulLiteral",
																"src": "2327:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "2330:1:8",
																"nodeType": "YulLiteral",
																"src": "2330:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "2320:6:8",
															"nodeType": "YulIdentifier",
															"src": "2320:6:8"
														},
														"nativeSrc": "2320:12:8",
														"nodeType": "YulFunctionCall",
														"src": "2320:12:8"
													},
													"nativeSrc": "2320:12:8",
													"nodeType": "YulExpressionStatement",
													"src": "2320:12:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "2293:7:8",
															"nodeType": "YulIdentifier",
															"src": "2293:7:8"
														},
														{
															"name": "headStart",
															"nativeSrc": "2302:9:8",
															"nodeType": "YulIdentifier",
															"src": "2302:9:8"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2289:3:8",
														"nodeType": "YulIdentifier",
														"src": "2289:3:8"
													},
													"nativeSrc": "2289:23:8",
													"nodeType": "YulFunctionCall",
													"src": "2289:23:8"
												},
												{
													"kind": "number",
													"nativeSrc": "2314:2:8",
													"nodeType": "YulLiteral",
													"src": "2314:2:8",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "2285:3:8",
												"nodeType": "YulIdentifier",
												"src": "2285:3:8"
											},
											"nativeSrc": "2285:32:8",
											"nodeType": "YulFunctionCall",
											"src": "2285:32:8"
										},
										"nativeSrc": "2282:52:8",
										"nodeType": "YulIf",
										"src": "2282:52:8"
									},
									{
										"nativeSrc": "2343:39:8",
										"nodeType": "YulAssignment",
										"src": "2343:39:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2372:9:8",
													"nodeType": "YulIdentifier",
													"src": "2372:9:8"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "2353:18:8",
												"nodeType": "YulIdentifier",
												"src": "2353:18:8"
											},
											"nativeSrc": "2353:29:8",
											"nodeType": "YulFunctionCall",
											"src": "2353:29:8"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "2343:6:8",
												"nodeType": "YulIdentifier",
												"src": "2343:6:8"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "2202:186:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2238:9:8",
									"nodeType": "YulTypedName",
									"src": "2238:9:8",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "2249:7:8",
									"nodeType": "YulTypedName",
									"src": "2249:7:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "2261:6:8",
									"nodeType": "YulTypedName",
									"src": "2261:6:8",
									"type": ""
								}
							],
							"src": "2202:186:8"
						},
						{
							"body": {
								"nativeSrc": "2494:102:8",
								"nodeType": "YulBlock",
								"src": "2494:102:8",
								"statements": [
									{
										"nativeSrc": "2504:26:8",
										"nodeType": "YulAssignment",
										"src": "2504:26:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2516:9:8",
													"nodeType": "YulIdentifier",
													"src": "2516:9:8"
												},
												{
													"kind": "number",
													"nativeSrc": "2527:2:8",
													"nodeType": "YulLiteral",
													"src": "2527:2:8",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2512:3:8",
												"nodeType": "YulIdentifier",
												"src": "2512:3:8"
											},
											"nativeSrc": "2512:18:8",
											"nodeType": "YulFunctionCall",
											"src": "2512:18:8"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2504:4:8",
												"nodeType": "YulIdentifier",
												"src": "2504:4:8"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2546:9:8",
													"nodeType": "YulIdentifier",
													"src": "2546:9:8"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "2561:6:8",
															"nodeType": "YulIdentifier",
															"src": "2561:6:8"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "2577:3:8",
																			"nodeType": "YulLiteral",
																			"src": "2577:3:8",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "2582:1:8",
																			"nodeType": "YulLiteral",
																			"src": "2582:1:8",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "2573:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2573:3:8"
																	},
																	"nativeSrc": "2573:11:8",
																	"nodeType": "YulFunctionCall",
																	"src": "2573:11:8"
																},
																{
																	"kind": "number",
																	"nativeSrc": "2586:1:8",
																	"nodeType": "YulLiteral",
																	"src": "2586:1:8",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nativeSrc": "2569:3:8",
																"nodeType": "YulIdentifier",
																"src": "2569:3:8"
															},
															"nativeSrc": "2569:19:8",
															"nodeType": "YulFunctionCall",
															"src": "2569:19:8"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "2557:3:8",
														"nodeType": "YulIdentifier",
														"src": "2557:3:8"
													},
													"nativeSrc": "2557:32:8",
													"nodeType": "YulFunctionCall",
													"src": "2557:32:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2539:6:8",
												"nodeType": "YulIdentifier",
												"src": "2539:6:8"
											},
											"nativeSrc": "2539:51:8",
											"nodeType": "YulFunctionCall",
											"src": "2539:51:8"
										},
										"nativeSrc": "2539:51:8",
										"nodeType": "YulExpressionStatement",
										"src": "2539:51:8"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "2393:203:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2463:9:8",
									"nodeType": "YulTypedName",
									"src": "2463:9:8",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "2474:6:8",
									"nodeType": "YulTypedName",
									"src": "2474:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "2485:4:8",
									"nodeType": "YulTypedName",
									"src": "2485:4:8",
									"type": ""
								}
							],
							"src": "2393:203:8"
						},
						{
							"body": {
								"nativeSrc": "2688:173:8",
								"nodeType": "YulBlock",
								"src": "2688:173:8",
								"statements": [
									{
										"body": {
											"nativeSrc": "2734:16:8",
											"nodeType": "YulBlock",
											"src": "2734:16:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2743:1:8",
																"nodeType": "YulLiteral",
																"src": "2743:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "2746:1:8",
																"nodeType": "YulLiteral",
																"src": "2746:1:8",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "2736:6:8",
															"nodeType": "YulIdentifier",
															"src": "2736:6:8"
														},
														"nativeSrc": "2736:12:8",
														"nodeType": "YulFunctionCall",
														"src": "2736:12:8"
													},
													"nativeSrc": "2736:12:8",
													"nodeType": "YulExpressionStatement",
													"src": "2736:12:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "2709:7:8",
															"nodeType": "YulIdentifier",
															"src": "2709:7:8"
														},
														{
															"name": "headStart",
															"nativeSrc": "2718:9:8",
															"nodeType": "YulIdentifier",
															"src": "2718:9:8"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2705:3:8",
														"nodeType": "YulIdentifier",
														"src": "2705:3:8"
													},
													"nativeSrc": "2705:23:8",
													"nodeType": "YulFunctionCall",
													"src": "2705:23:8"
												},
												{
													"kind": "number",
													"nativeSrc": "2730:2:8",
													"nodeType": "YulLiteral",
													"src": "2730:2:8",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "2701:3:8",
												"nodeType": "YulIdentifier",
												"src": "2701:3:8"
											},
											"nativeSrc": "2701:32:8",
											"nodeType": "YulFunctionCall",
											"src": "2701:32:8"
										},
										"nativeSrc": "2698:52:8",
										"nodeType": "YulIf",
										"src": "2698:52:8"
									},
									{
										"nativeSrc": "2759:39:8",
										"nodeType": "YulAssignment",
										"src": "2759:39:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2788:9:8",
													"nodeType": "YulIdentifier",
													"src": "2788:9:8"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "2769:18:8",
												"nodeType": "YulIdentifier",
												"src": "2769:18:8"
											},
											"nativeSrc": "2769:29:8",
											"nodeType": "YulFunctionCall",
											"src": "2769:29:8"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "2759:6:8",
												"nodeType": "YulIdentifier",
												"src": "2759:6:8"
											}
										]
									},
									{
										"nativeSrc": "2807:48:8",
										"nodeType": "YulAssignment",
										"src": "2807:48:8",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "2840:9:8",
															"nodeType": "YulIdentifier",
															"src": "2840:9:8"
														},
														{
															"kind": "number",
															"nativeSrc": "2851:2:8",
															"nodeType": "YulLiteral",
															"src": "2851:2:8",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2836:3:8",
														"nodeType": "YulIdentifier",
														"src": "2836:3:8"
													},
													"nativeSrc": "2836:18:8",
													"nodeType": "YulFunctionCall",
													"src": "2836:18:8"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "2817:18:8",
												"nodeType": "YulIdentifier",
												"src": "2817:18:8"
											},
											"nativeSrc": "2817:38:8",
											"nodeType": "YulFunctionCall",
											"src": "2817:38:8"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "2807:6:8",
												"nodeType": "YulIdentifier",
												"src": "2807:6:8"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_address",
							"nativeSrc": "2601:260:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2646:9:8",
									"nodeType": "YulTypedName",
									"src": "2646:9:8",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "2657:7:8",
									"nodeType": "YulTypedName",
									"src": "2657:7:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "2669:6:8",
									"nodeType": "YulTypedName",
									"src": "2669:6:8",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "2677:6:8",
									"nodeType": "YulTypedName",
									"src": "2677:6:8",
									"type": ""
								}
							],
							"src": "2601:260:8"
						},
						{
							"body": {
								"nativeSrc": "2921:325:8",
								"nodeType": "YulBlock",
								"src": "2921:325:8",
								"statements": [
									{
										"nativeSrc": "2931:22:8",
										"nodeType": "YulAssignment",
										"src": "2931:22:8",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "2945:1:8",
													"nodeType": "YulLiteral",
													"src": "2945:1:8",
													"type": "",
													"value": "1"
												},
												{
													"name": "data",
													"nativeSrc": "2948:4:8",
													"nodeType": "YulIdentifier",
													"src": "2948:4:8"
												}
											],
											"functionName": {
												"name": "shr",
												"nativeSrc": "2941:3:8",
												"nodeType": "YulIdentifier",
												"src": "2941:3:8"
											},
											"nativeSrc": "2941:12:8",
											"nodeType": "YulFunctionCall",
											"src": "2941:12:8"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "2931:6:8",
												"nodeType": "YulIdentifier",
												"src": "2931:6:8"
											}
										]
									},
									{
										"nativeSrc": "2962:38:8",
										"nodeType": "YulVariableDeclaration",
										"src": "2962:38:8",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "2992:4:8",
													"nodeType": "YulIdentifier",
													"src": "2992:4:8"
												},
												{
													"kind": "number",
													"nativeSrc": "2998:1:8",
													"nodeType": "YulLiteral",
													"src": "2998:1:8",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "2988:3:8",
												"nodeType": "YulIdentifier",
												"src": "2988:3:8"
											},
											"nativeSrc": "2988:12:8",
											"nodeType": "YulFunctionCall",
											"src": "2988:12:8"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "2966:18:8",
												"nodeType": "YulTypedName",
												"src": "2966:18:8",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "3039:31:8",
											"nodeType": "YulBlock",
											"src": "3039:31:8",
											"statements": [
												{
													"nativeSrc": "3041:27:8",
													"nodeType": "YulAssignment",
													"src": "3041:27:8",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "3055:6:8",
																"nodeType": "YulIdentifier",
																"src": "3055:6:8"
															},
															{
																"kind": "number",
																"nativeSrc": "3063:4:8",
																"nodeType": "YulLiteral",
																"src": "3063:4:8",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "3051:3:8",
															"nodeType": "YulIdentifier",
															"src": "3051:3:8"
														},
														"nativeSrc": "3051:17:8",
														"nodeType": "YulFunctionCall",
														"src": "3051:17:8"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "3041:6:8",
															"nodeType": "YulIdentifier",
															"src": "3041:6:8"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "3019:18:8",
													"nodeType": "YulIdentifier",
													"src": "3019:18:8"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "3012:6:8",
												"nodeType": "YulIdentifier",
												"src": "3012:6:8"
											},
											"nativeSrc": "3012:26:8",
											"nodeType": "YulFunctionCall",
											"src": "3012:26:8"
										},
										"nativeSrc": "3009:61:8",
										"nodeType": "YulIf",
										"src": "3009:61:8"
									},
									{
										"body": {
											"nativeSrc": "3129:111:8",
											"nodeType": "YulBlock",
											"src": "3129:111:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3150:1:8",
																"nodeType": "YulLiteral",
																"src": "3150:1:8",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3157:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3157:3:8",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3162:10:8",
																		"nodeType": "YulLiteral",
																		"src": "3162:10:8",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3153:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3153:3:8"
																},
																"nativeSrc": "3153:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3153:20:8"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "3143:6:8",
															"nodeType": "YulIdentifier",
															"src": "3143:6:8"
														},
														"nativeSrc": "3143:31:8",
														"nodeType": "YulFunctionCall",
														"src": "3143:31:8"
													},
													"nativeSrc": "3143:31:8",
													"nodeType": "YulExpressionStatement",
													"src": "3143:31:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3194:1:8",
																"nodeType": "YulLiteral",
																"src": "3194:1:8",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nativeSrc": "3197:4:8",
																"nodeType": "YulLiteral",
																"src": "3197:4:8",
																"type": "",
																"value": "0x22"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "3187:6:8",
															"nodeType": "YulIdentifier",
															"src": "3187:6:8"
														},
														"nativeSrc": "3187:15:8",
														"nodeType": "YulFunctionCall",
														"src": "3187:15:8"
													},
													"nativeSrc": "3187:15:8",
													"nodeType": "YulExpressionStatement",
													"src": "3187:15:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3222:1:8",
																"nodeType": "YulLiteral",
																"src": "3222:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "3225:4:8",
																"nodeType": "YulLiteral",
																"src": "3225:4:8",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "3215:6:8",
															"nodeType": "YulIdentifier",
															"src": "3215:6:8"
														},
														"nativeSrc": "3215:15:8",
														"nodeType": "YulFunctionCall",
														"src": "3215:15:8"
													},
													"nativeSrc": "3215:15:8",
													"nodeType": "YulExpressionStatement",
													"src": "3215:15:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "3085:18:8",
													"nodeType": "YulIdentifier",
													"src": "3085:18:8"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "3108:6:8",
															"nodeType": "YulIdentifier",
															"src": "3108:6:8"
														},
														{
															"kind": "number",
															"nativeSrc": "3116:2:8",
															"nodeType": "YulLiteral",
															"src": "3116:2:8",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "3105:2:8",
														"nodeType": "YulIdentifier",
														"src": "3105:2:8"
													},
													"nativeSrc": "3105:14:8",
													"nodeType": "YulFunctionCall",
													"src": "3105:14:8"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "3082:2:8",
												"nodeType": "YulIdentifier",
												"src": "3082:2:8"
											},
											"nativeSrc": "3082:38:8",
											"nodeType": "YulFunctionCall",
											"src": "3082:38:8"
										},
										"nativeSrc": "3079:161:8",
										"nodeType": "YulIf",
										"src": "3079:161:8"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "2866:380:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "2901:4:8",
									"nodeType": "YulTypedName",
									"src": "2901:4:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "2910:6:8",
									"nodeType": "YulTypedName",
									"src": "2910:6:8",
									"type": ""
								}
							],
							"src": "2866:380:8"
						},
						{
							"body": {
								"nativeSrc": "3408:188:8",
								"nodeType": "YulBlock",
								"src": "3408:188:8",
								"statements": [
									{
										"nativeSrc": "3418:26:8",
										"nodeType": "YulAssignment",
										"src": "3418:26:8",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3430:9:8",
													"nodeType": "YulIdentifier",
													"src": "3430:9:8"
												},
												{
													"kind": "number",
													"nativeSrc": "3441:2:8",
													"nodeType": "YulLiteral",
													"src": "3441:2:8",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3426:3:8",
												"nodeType": "YulIdentifier",
												"src": "3426:3:8"
											},
											"nativeSrc": "3426:18:8",
											"nodeType": "YulFunctionCall",
											"src": "3426:18:8"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3418:4:8",
												"nodeType": "YulIdentifier",
												"src": "3418:4:8"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3460:9:8",
													"nodeType": "YulIdentifier",
													"src": "3460:9:8"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "3475:6:8",
															"nodeType": "YulIdentifier",
															"src": "3475:6:8"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "3491:3:8",
																			"nodeType": "YulLiteral",
																			"src": "3491:3:8",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "3496:1:8",
																			"nodeType": "YulLiteral",
																			"src": "3496:1:8",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "3487:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3487:3:8"
																	},
																	"nativeSrc": "3487:11:8",
																	"nodeType": "YulFunctionCall",
																	"src": "3487:11:8"
																},
																{
																	"kind": "number",
																	"nativeSrc": "3500:1:8",
																	"nodeType": "YulLiteral",
																	"src": "3500:1:8",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nativeSrc": "3483:3:8",
																"nodeType": "YulIdentifier",
																"src": "3483:3:8"
															},
															"nativeSrc": "3483:19:8",
															"nodeType": "YulFunctionCall",
															"src": "3483:19:8"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "3471:3:8",
														"nodeType": "YulIdentifier",
														"src": "3471:3:8"
													},
													"nativeSrc": "3471:32:8",
													"nodeType": "YulFunctionCall",
													"src": "3471:32:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3453:6:8",
												"nodeType": "YulIdentifier",
												"src": "3453:6:8"
											},
											"nativeSrc": "3453:51:8",
											"nodeType": "YulFunctionCall",
											"src": "3453:51:8"
										},
										"nativeSrc": "3453:51:8",
										"nodeType": "YulExpressionStatement",
										"src": "3453:51:8"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3524:9:8",
															"nodeType": "YulIdentifier",
															"src": "3524:9:8"
														},
														{
															"kind": "number",
															"nativeSrc": "3535:2:8",
															"nodeType": "YulLiteral",
															"src": "3535:2:8",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3520:3:8",
														"nodeType": "YulIdentifier",
														"src": "3520:3:8"
													},
													"nativeSrc": "3520:18:8",
													"nodeType": "YulFunctionCall",
													"src": "3520:18:8"
												},
												{
													"name": "value1",
													"nativeSrc": "3540:6:8",
													"nodeType": "YulIdentifier",
													"src": "3540:6:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3513:6:8",
												"nodeType": "YulIdentifier",
												"src": "3513:6:8"
											},
											"nativeSrc": "3513:34:8",
											"nodeType": "YulFunctionCall",
											"src": "3513:34:8"
										},
										"nativeSrc": "3513:34:8",
										"nodeType": "YulExpressionStatement",
										"src": "3513:34:8"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3567:9:8",
															"nodeType": "YulIdentifier",
															"src": "3567:9:8"
														},
														{
															"kind": "number",
															"nativeSrc": "3578:2:8",
															"nodeType": "YulLiteral",
															"src": "3578:2:8",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3563:3:8",
														"nodeType": "YulIdentifier",
														"src": "3563:3:8"
													},
													"nativeSrc": "3563:18:8",
													"nodeType": "YulFunctionCall",
													"src": "3563:18:8"
												},
												{
													"name": "value2",
													"nativeSrc": "3583:6:8",
													"nodeType": "YulIdentifier",
													"src": "3583:6:8"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3556:6:8",
												"nodeType": "YulIdentifier",
												"src": "3556:6:8"
											},
											"nativeSrc": "3556:34:8",
											"nodeType": "YulFunctionCall",
											"src": "3556:34:8"
										},
										"nativeSrc": "3556:34:8",
										"nodeType": "YulExpressionStatement",
										"src": "3556:34:8"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "3251:345:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3361:9:8",
									"nodeType": "YulTypedName",
									"src": "3361:9:8",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "3372:6:8",
									"nodeType": "YulTypedName",
									"src": "3372:6:8",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3380:6:8",
									"nodeType": "YulTypedName",
									"src": "3380:6:8",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3388:6:8",
									"nodeType": "YulTypedName",
									"src": "3388:6:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3399:4:8",
									"nodeType": "YulTypedName",
									"src": "3399:4:8",
									"type": ""
								}
							],
							"src": "3251:345:8"
						},
						{
							"body": {
								"nativeSrc": "3649:174:8",
								"nodeType": "YulBlock",
								"src": "3649:174:8",
								"statements": [
									{
										"nativeSrc": "3659:16:8",
										"nodeType": "YulAssignment",
										"src": "3659:16:8",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "3670:1:8",
													"nodeType": "YulIdentifier",
													"src": "3670:1:8"
												},
												{
													"name": "y",
													"nativeSrc": "3673:1:8",
													"nodeType": "YulIdentifier",
													"src": "3673:1:8"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3666:3:8",
												"nodeType": "YulIdentifier",
												"src": "3666:3:8"
											},
											"nativeSrc": "3666:9:8",
											"nodeType": "YulFunctionCall",
											"src": "3666:9:8"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "3659:3:8",
												"nodeType": "YulIdentifier",
												"src": "3659:3:8"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "3706:111:8",
											"nodeType": "YulBlock",
											"src": "3706:111:8",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3727:1:8",
																"nodeType": "YulLiteral",
																"src": "3727:1:8",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3734:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3734:3:8",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3739:10:8",
																		"nodeType": "YulLiteral",
																		"src": "3739:10:8",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3730:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3730:3:8"
																},
																"nativeSrc": "3730:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3730:20:8"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "3720:6:8",
															"nodeType": "YulIdentifier",
															"src": "3720:6:8"
														},
														"nativeSrc": "3720:31:8",
														"nodeType": "YulFunctionCall",
														"src": "3720:31:8"
													},
													"nativeSrc": "3720:31:8",
													"nodeType": "YulExpressionStatement",
													"src": "3720:31:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3771:1:8",
																"nodeType": "YulLiteral",
																"src": "3771:1:8",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nativeSrc": "3774:4:8",
																"nodeType": "YulLiteral",
																"src": "3774:4:8",
																"type": "",
																"value": "0x11"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "3764:6:8",
															"nodeType": "YulIdentifier",
															"src": "3764:6:8"
														},
														"nativeSrc": "3764:15:8",
														"nodeType": "YulFunctionCall",
														"src": "3764:15:8"
													},
													"nativeSrc": "3764:15:8",
													"nodeType": "YulExpressionStatement",
													"src": "3764:15:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3799:1:8",
																"nodeType": "YulLiteral",
																"src": "3799:1:8",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "3802:4:8",
																"nodeType": "YulLiteral",
																"src": "3802:4:8",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "3792:6:8",
															"nodeType": "YulIdentifier",
															"src": "3792:6:8"
														},
														"nativeSrc": "3792:15:8",
														"nodeType": "YulFunctionCall",
														"src": "3792:15:8"
													},
													"nativeSrc": "3792:15:8",
													"nodeType": "YulExpressionStatement",
													"src": "3792:15:8"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "3690:1:8",
													"nodeType": "YulIdentifier",
													"src": "3690:1:8"
												},
												{
													"name": "sum",
													"nativeSrc": "3693:3:8",
													"nodeType": "YulIdentifier",
													"src": "3693:3:8"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "3687:2:8",
												"nodeType": "YulIdentifier",
												"src": "3687:2:8"
											},
											"nativeSrc": "3687:10:8",
											"nodeType": "YulFunctionCall",
											"src": "3687:10:8"
										},
										"nativeSrc": "3684:133:8",
										"nodeType": "YulIf",
										"src": "3684:133:8"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "3601:222:8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "3632:1:8",
									"nodeType": "YulTypedName",
									"src": "3632:1:8",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "3635:1:8",
									"nodeType": "YulTypedName",
									"src": "3635:1:8",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "3641:3:8",
									"nodeType": "YulTypedName",
									"src": "3641:3:8",
									"type": ""
								}
							],
							"src": "3601:222:8"
						}
					]
				},
				"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
				"id": 8,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a25780638da5cb5b116100715780638da5cb5b1461023457806395d89b411461024f578063a9059cbb14610257578063dd62ed3e1461026a578063f2fde38b146102a357600080fd5b806370a08231146101de578063715018a61461020757806379cc67901461020f57806381a4a6d81461022257600080fd5b80632ff2e9dc116100e95780632ff2e9dc14610181578063313ce5671461019457806340c10f19146101a357806342966c68146101b857806359dc2dd2146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102b6565b6040516101309190610810565b60405180910390f35b61014c61014736600461087a565b610348565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c3660046108a4565b610362565b6101606b033b2e3c9fd0803ce800000081565b60405160128152602001610130565b6101b66101b136600461087a565b610386565b005b6101b66101c63660046108e1565b61039c565b6101b66101d936600461087a565b6103a9565b6101606101ec3660046108fa565b6001600160a01b031660009081526020819052604090205490565b6101b66103bb565b6101b661021d36600461087a565b6103cf565b6b033b2e3c9fd0803ce8000000610160565b6005546040516001600160a01b039091168152602001610130565b6101236103da565b61014c61026536600461087a565b6103e9565b61016061027836600461091c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b66102b13660046108fa565b6103f7565b6060600380546102c59061094f565b80601f01602080910402602001604051908101604052809291908181526020018280546102f19061094f565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b5050505050905090565b600033610356818585610437565b60019150505b92915050565b600033610370858285610449565b61037b8585856104c7565b506001949350505050565b61038e610526565b6103988282610553565b5050565b6103a63382610589565b50565b6103b1610526565b6103988282610589565b6103c3610526565b6103cd60006105bf565b565b6103b1823383610449565b6060600480546102c59061094f565b6000336103568185856104c7565b6103ff610526565b6001600160a01b03811661042e57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103a6816105bf565b6104448383836001610611565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146104c157818110156104b257604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610425565b6104c184848484036000610611565b50505050565b6001600160a01b0383166104f157604051634b637e8f60e11b815260006004820152602401610425565b6001600160a01b03821661051b5760405163ec442f0560e01b815260006004820152602401610425565b6104448383836106e6565b6005546001600160a01b031633146103cd5760405163118cdaa760e01b8152336004820152602401610425565b6001600160a01b03821661057d5760405163ec442f0560e01b815260006004820152602401610425565b610398600083836106e6565b6001600160a01b0382166105b357604051634b637e8f60e11b815260006004820152602401610425565b610398826000836106e6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841661063b5760405163e602df0560e01b815260006004820152602401610425565b6001600160a01b03831661066557604051634a1406b160e11b815260006004820152602401610425565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104c157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106d891815260200190565b60405180910390a350505050565b6001600160a01b0383166107115780600260008282546107069190610989565b909155506107839050565b6001600160a01b038316600090815260208190526040902054818110156107645760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610425565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661079f576002805482900390556107be565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161080391815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561083e5760208186018101516040868401015201610821565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461087557600080fd5b919050565b6000806040838503121561088d57600080fd5b6108968361085e565b946020939093013593505050565b6000806000606084860312156108b957600080fd5b6108c28461085e565b92506108d06020850161085e565b929592945050506040919091013590565b6000602082840312156108f357600080fd5b5035919050565b60006020828403121561090c57600080fd5b6109158261085e565b9392505050565b6000806040838503121561092f57600080fd5b6109388361085e565b91506109466020840161085e565b90509250929050565b600181811c9082168061096357607f821691505b60208210810361098357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561035c57634e487b7160e01b600052601160045260246000fdfea26469706673582212206957db4e7676bbd3ac194c5025ea0ab739dcd4ca5a8a99e819b55039d967636c64736f6c634300081a0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x81A4A6D8 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x59DC2DD2 EQ PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0x160 PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x14C PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x91C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0x94F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F1 SWAP1 PUSH2 0x94F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x313 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x321 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x370 DUP6 DUP3 DUP6 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x37B DUP6 DUP6 DUP6 PUSH2 0x4C7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0x526 JUMP JUMPDEST PUSH2 0x398 DUP3 DUP3 PUSH2 0x553 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3A6 CALLER DUP3 PUSH2 0x589 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x398 DUP3 DUP3 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x3CD PUSH1 0x0 PUSH2 0x5BF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3B1 DUP3 CALLER DUP4 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A6 DUP2 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x611 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0x4C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x611 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0x444 DUP4 DUP4 DUP4 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0x398 PUSH1 0x0 DUP4 DUP4 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0x398 DUP3 PUSH1 0x0 DUP4 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6D8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x711 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x783 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x803 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x83E JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x821 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x896 DUP4 PUSH2 0x85E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP5 PUSH2 0x85E JUMP JUMPDEST SWAP3 POP PUSH2 0x8D0 PUSH1 0x20 DUP6 ADD PUSH2 0x85E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x915 DUP3 PUSH2 0x85E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x938 DUP4 PUSH2 0x85E JUMP JUMPDEST SWAP2 POP PUSH2 0x946 PUSH1 0x20 DUP5 ADD PUSH2 0x85E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x963 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x983 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x35C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x57DB4E7676BBD3AC194C POP 0x25 0xEA EXP 0xB7 CODECOPY 0xDC 0xD4 0xCA GAS DUP11 SWAP10 0xE8 NOT 0xB5 POP CODECOPY 0xD9 PUSH8 0x636C64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
		"sourceMap": "250:667:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:8;;1187:22;1169:41;;1157:2;1142:18;4293:186:2;1029:187:8;3144:97:2;3222:12;;3144:97;;;1367:25:8;;;1355:2;1340:18;3144:97:2;1221:177:8;5039:244:2;;;;;;:::i;:::-;;:::i;309:62:7:-;;350:21;309:62;;3002:82:2;;;3075:2;1924:36:8;;1912:2;1897:18;3002:82:2;1782:184:8;539:95:7;;;;;;:::i;:::-;;:::i;:::-;;618:87:4;;;;;;:::i;:::-;;:::i;642:110:7:-;;;;;;:::i;:::-;;:::i;3299:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;1021:158:4:-;;;;;;:::i;:::-;;:::i;816:98:7:-;350:21;816:98;;1638:85:0;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2539:51:8;;2527:2;2512:18;1638:85:0;2393:203:8;2276:93:2;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;:::i;:::-;;:::i;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:6;4420:31:2;735:10:6;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:6;5182:37:2;5198:4;735:10:6;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;539:95:7:-;1531:13:0;:11;:13::i;:::-;609:17:7::1;615:2;619:6;609:5;:17::i;:::-;539:95:::0;;:::o;618:87:4:-;672:26;735:10:6;692:5:4;672;:26::i;:::-;618:87;:::o;642:110:7:-;1531:13:0;:11;:13::i;:::-;725:19:7::1;731:4;737:6;725:5;:19::i;2293:101:0:-:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;735:10:6;1135:5:4;1096:15;:45::i;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:6;3733:27:2;735:10:6;3750:2:2;3754:5;3733:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2539:51:8::0;2512:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;8989:128:2:-:0;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;3471:32:8;;10936:60:2;;;3453:51:8;3520:18;;;3513:34;;;3563:18;;;3556:34;;;3426:18;;10936:60:2;3251:345:8;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2539:51:8;2512:18;;5780:30:2;2393:203:8;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2539:51:8;2512:18;;5873:32:2;2393:203:8;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;2539:51:8;2512:18;;1901:40:0;2393:203:8;7721:208:2;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2539:51:8;2512:18;;7835:32:2;2393:203:8;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;8247:206::-;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;2539:51:8;2512:18;;8361:30:2;2393:203:8;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:2:-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2539:51:8;2512:18;;10103:32:2;2393:203:8;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2539:51:8;2512:18;;10203:31:2;2393:203:8;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1367:25:8;;1355:2;1340:18;;1221:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;3471:32:8;;6649:50:2;;;3453:51:8;3520:18;;;3513:34;;;3563:18;;;3556:34;;;3426:18;;6649:50:2;3251:345:8;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1367::8;;1355:2;1340:18;;1221:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:527:8:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;546:173::-;614:20;;-1:-1:-1;;;;;663:31:8;;653:42;;643:70;;709:1;706;699:12;643:70;546:173;;;:::o;724:300::-;792:6;800;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;892:29;911:9;892:29;:::i;:::-;882:39;990:2;975:18;;;;962:32;;-1:-1:-1;;;724:300:8:o;1403:374::-;1480:6;1488;1496;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;1588:29;1607:9;1588:29;:::i;:::-;1578:39;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1403:374;;1626:48;;-1:-1:-1;;;1743:2:8;1728:18;;;;1715:32;;1403:374::o;1971:226::-;2030:6;2083:2;2071:9;2062:7;2058:23;2054:32;2051:52;;;2099:1;2096;2089:12;2051:52;-1:-1:-1;2144:23:8;;1971:226;-1:-1:-1;1971:226:8:o;2202:186::-;2261:6;2314:2;2302:9;2293:7;2289:23;2285:32;2282:52;;;2330:1;2327;2320:12;2282:52;2353:29;2372:9;2353:29;:::i;:::-;2343:39;2202:186;-1:-1:-1;;;2202:186:8:o;2601:260::-;2669:6;2677;2730:2;2718:9;2709:7;2705:23;2701:32;2698:52;;;2746:1;2743;2736:12;2698:52;2769:29;2788:9;2769:29;:::i;:::-;2759:39;;2817:38;2851:2;2840:9;2836:18;2817:38;:::i;:::-;2807:48;;2601:260;;;;;:::o;2866:380::-;2945:1;2941:12;;;;2988;;;3009:61;;3063:4;3055:6;3051:17;3041:27;;3009:61;3116:2;3108:6;3105:14;3085:18;3082:38;3079:161;;3162:10;3157:3;3153:20;3150:1;3143:31;3197:4;3194:1;3187:15;3225:4;3222:1;3215:15;3079:161;;2866:380;;;:::o;3601:222::-;3666:9;;;3687:10;;;3684:133;;;3739:10;3734:3;3730:20;3727:1;3720:31;3774:4;3771:1;3764:15;3802:4;3799:1;3792:15"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract KERRToken is ERC20, E...\n  PUSH 40\t\t\tcontract KERRToken is ERC20, E...\n  MSTORE \t\t\tcontract KERRToken is ERC20, E...\n  CALLVALUE \t\t\tconstructor() ERC20(\"KERRToken...\n  DUP1 \t\t\tconstructor() ERC20(\"KERRToken...\n  ISZERO \t\t\tconstructor() ERC20(\"KERRToken...\n  PUSH [tag] 1\t\t\tconstructor() ERC20(\"KERRToken...\n  JUMPI \t\t\tconstructor() ERC20(\"KERRToken...\n  PUSH 0\t\t\tconstructor() ERC20(\"KERRToken...\n  DUP1 \t\t\tconstructor() ERC20(\"KERRToken...\n  REVERT \t\t\tconstructor() ERC20(\"KERRToken...\ntag 1\t\t\tconstructor() ERC20(\"KERRToken...\n  JUMPDEST \t\t\tconstructor() ERC20(\"KERRToken...\n  POP \t\t\tconstructor() ERC20(\"KERRToken...\n  CALLER \t\t\tmsg.sender\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  PUSH 40\t\t\t\n  ADD \t\t\t\n  PUSH 40\t\t\t\n  MSTORE \t\t\t\n  DUP1 \t\t\t\n  PUSH 9\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 25A2A9292A37B5B2B7\t\t\t\n  PUSH B9\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  PUSH 40\t\t\t\n  ADD \t\t\t\n  PUSH 40\t\t\t\n  MSTORE \t\t\t\n  DUP1 \t\t\t\n  PUSH 4\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 25A2A929\t\t\t\n  PUSH E1\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  PUSH 3\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 6\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 7\t\t\t\n  JUMP \t\t\t\ntag 6\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH 4\t\t\t\n  PUSH [tag] 8\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 7\t\t\t\n  JUMP \t\t\t\ntag 8\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP2 \t\t\t\n  AND \t\t\t\n  PUSH [tag] 10\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 1E4FBDF7\t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 0\t\t\t\n  PUSH 4\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  ADD \t\t\t\ntag 11\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 10\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 13\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 14\t\t\t\n  JUMP \t\t\t\ntag 13\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH [tag] 16\t\t\t_mint(msg.sender, INITIAL_SUPP...\n  CALLER \t\t\tmsg.sender\n  PUSH 33B2E3C9FD0803CE8000000\t\t\t1000000000 * 10 ** 18\n  PUSH [tag] 17\t\t\t_mint\n  JUMP \t\t\t_mint(msg.sender, INITIAL_SUPP...\ntag 16\t\t\t_mint(msg.sender, INITIAL_SUPP...\n  JUMPDEST \t\t\t_mint(msg.sender, INITIAL_SUPP...\n  PUSH [tag] 42\t\t\tcontract KERRToken is ERC20, E...\n  JUMP \t\t\tcontract KERRToken is ERC20, E...\ntag 14\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 5\t\t\t\n  DUP1 \t\t\t\n  SLOAD \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP4 \t\t\t\n  DUP2 \t\t\t\n  AND \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  NOT \t\t\t\n  DUP4 \t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  SWAP4 \t\t\t\n  SSTORE \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  SWAP2 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  DUP3 \t\t\t\n  SWAP1 \t\t\t\n  PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\n  SWAP1 \t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  LOG3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 17\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP3 \t\t\t\n  AND \t\t\t\n  PUSH [tag] 21\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH EC442F05\t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 0\t\t\t\n  PUSH 4\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 11\t\t\t\n  JUMP \t\t\t\ntag 21\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 23\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 24\t\t\t\n  JUMP \t\t\t\ntag 23\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 24\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP4 \t\t\t\n  AND \t\t\t\n  PUSH [tag] 26\t\t\t\n  JUMPI \t\t\t\n  DUP1 \t\t\t\n  PUSH 2\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  PUSH [tag] 27\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 28\t\t\t\n  JUMP \t\t\t\ntag 27\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  SWAP2 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  PUSH [tag] 29\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 26\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP4 \t\t\t\n  AND \t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  MSTORE \t\t\t\n  PUSH 40\t\t\t\n  SWAP1 \t\t\t\n  KECCAK256 \t\t\t\n  SLOAD \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 30\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 391434E3\t\t\t\n  PUSH E2\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP6 \t\t\t\n  AND \t\t\t\n  PUSH 4\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  DUP3 \t\t\t\n  SWAP1 \t\t\t\n  MSTORE \t\t\t\n  PUSH 44\t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  DUP4 \t\t\t\n  SWAP1 \t\t\t\n  MSTORE \t\t\t\n  PUSH 64\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 11\t\t\t\n  JUMP \t\t\t\ntag 30\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP5 \t\t\t\n  AND \t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  MSTORE \t\t\t\n  PUSH 40\t\t\t\n  SWAP1 \t\t\t\n  KECCAK256 \t\t\t\n  SWAP1 \t\t\t\n  DUP3 \t\t\t\n  SWAP1 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\ntag 29\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP3 \t\t\t\n  AND \t\t\t\n  PUSH [tag] 33\t\t\t\n  JUMPI \t\t\t\n  PUSH 2\t\t\t\n  DUP1 \t\t\t\n  SLOAD \t\t\t\n  DUP3 \t\t\t\n  SWAP1 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  PUSH [tag] 34\t\t\t\n  JUMP \t\t\t\ntag 33\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP3 \t\t\t\n  AND \t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  MSTORE \t\t\t\n  PUSH 40\t\t\t\n  SWAP1 \t\t\t\n  KECCAK256 \t\t\t\n  DUP1 \t\t\t\n  SLOAD \t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\ntag 34\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  AND \t\t\t\n  DUP4 \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  AND \t\t\t\n  PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n  DUP4 \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH [tag] 35\t\t\t\n  SWAP2 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  JUMP \t\t\t\ntag 35\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  LOG3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 37\t\t\te-Identifier: MIT\\r\\npragma so...\n  JUMPDEST \t\t\te-Identifier: MIT\\r\\npragma so...\n  PUSH 4E487B71\t\t\teppelin/co\n  PUSH E0\t\t\tope\n  SHL \t\t\tt \"@openzeppelin/con\n  PUSH 0\t\t\tp\n  MSTORE \t\t\t;\\r\\n\\r\\nimport \"@openzeppelin...\n  PUSH 41\t\t\tRC20\n  PUSH 4\t\t\t0\n  MSTORE \t\t\ten/ERC20/ERC20.\n  PUSH 24\t\t\tnzep\n  PUSH 0\t\t\to\n  REVERT \t\t\tport \"@openzepp\ntag 38\t\t\tcts/token/ERC20/extensions/ERC...\n  JUMPDEST \t\t\tcts/token/ERC20/extensions/ERC...\n  PUSH 1\t\t\t/\n  DUP2 \t\t\tacts/access/\n  DUP2 \t\t\tacts/access/\n  SHR \t\t\tacts/access/\n  SWAP1 \t\t\tacts/access/\n  DUP3 \t\t\t is ERC20, E\n  AND \t\t\t is ERC20, E\n  DUP1 \t\t\t is ERC20, E\n  PUSH [tag] 45\t\t\tble, Ownable {\\r\\n    uint256 ...\n  JUMPI \t\t\tble, Ownable {\\r\\n    uint256 ...\n  PUSH 7F\t\t\tPPLY\n  DUP3 \t\t\tITIAL_\n  AND \t\t\tt INITIAL_SUPPLY \n  SWAP2 \t\t\tic constant INITIAL_SUPPLY \n  POP \t\t\tic constant INITIAL_SUPPLY \ntag 45\t\t\tble, Ownable {\\r\\n    uint256 ...\n  JUMPDEST \t\t\tble, Ownable {\\r\\n    uint256 ...\n  PUSH 20\t\t\tth\n  DUP3 \t\t\tokens \n  LT \t\t\tn tokens with \n  DUP2 \t\t\t ** 18;  // 1 bill\n  SUB \t\t\t 10 ** 18;  // 1 billion token...\n  PUSH [tag] 46\t\t\t0 * 10 ** 18;  // 1 billion to...\n  JUMPI \t\t\t0 * 10 ** 18;  // 1 billion to...\n  PUSH 4E487B71\t\t\tRToken\", \"\n  PUSH E0\t\t\t(\"K\n  SHL \t\t\tRC20(\"KERRToken\", \"K\n  PUSH 0\t\t\t)\n  MSTORE \t\t\tructor() ERC20(\"KERRToken\", \"K...\n  PUSH 22\t\t\t) {\\r\n  PUSH 4\t\t\td\n  MSTORE \t\t\tmsg.sender) {\\r\\n\n  PUSH 24\t\t\tr, I\n  PUSH 0\t\t\tn\n  REVERT \t\t\t(msg.sender, IN\ntag 46\t\t\t0 * 10 ** 18;  // 1 billion to...\n  JUMPDEST \t\t\t0 * 10 ** 18;  // 1 billion to...\n  POP \t\t\t0 * 10 ** 18;  // 1 billion to...\n  SWAP2 \t\t\tcts/token/ERC20/extensions/ERC...\n  SWAP1 \t\t\tcts/token/ERC20/extensions/ERC...\n  POP \t\t\tcts/token/ERC20/extensions/ERC...\n  JUMP \t\t\tcts/token/ERC20/extensions/ERC...\ntag 40\t\t\tomAccount(address from, uint25...\n  JUMPDEST \t\t\tomAccount(address from, uint25...\n  PUSH 1F\t\t\t /\n  DUP3 \t\t\t\\r\\n \n  GT \t\t\t}\\r\\n\\r\\n    //\n  ISZERO \t\t\t   }\\r\\n\\r\\n    // Add a new f...\n  PUSH [tag] 49\t\t\t   }\\r\\n\\r\\n    // Add a new f...\n  JUMPI \t\t\t   }\\r\\n\\r\\n    // Add a new f...\n  DUP1 \t\t\teclar\n  PUSH 0\t\t\te\n  MSTORE \t\t\tvariable declara\n  PUSH 20\t\t\tly()\n  PUSH 0\t\t\tu\n  KECCAK256 \t\t\tetInitialSupply() \n  PUSH 1F\t\t\t  \n  DUP5 \t\t\tAL_SUPPLY;\n  ADD \t\t\tNITIAL_SUPPLY;\\r\\n   \n  PUSH 5\t\t\tn\n  SHR \t\t\teturn INITIAL_SUPPLY;\\r\\n    \n  DUP2 \t\t\t    \n  ADD \t\t\t\\n        return INITIAL_SUPPL...\n  PUSH 20\t\t\t\n  DUP6 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 50\t\t\t\n  JUMPI \t\t\t\n  POP \t\t\t\n  DUP1 \t\t\t\ntag 50\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1F\t\t\t\n  DUP5 \t\t\t\n  ADD \t\t\t\n  PUSH 5\t\t\t\n  SHR \t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\ntag 51\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 53\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  SSTORE \t\t\t\n  PUSH 1\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 51\t\t\t\n  JUMP \t\t\t\ntag 53\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\ntag 49\t\t\t   }\\r\\n\\r\\n    // Add a new f...\n  JUMPDEST \t\t\t   }\\r\\n\\r\\n    // Add a new f...\n  POP \t\t\tomAccount(address from, uint25...\n  POP \t\t\tomAccount(address from, uint25...\n  POP \t\t\tomAccount(address from, uint25...\n  JUMP \t\t\tomAccount(address from, uint25...\ntag 7\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  MLOAD \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH 40\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 57\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 57\t\t\t\n  PUSH [tag] 37\t\t\t\n  JUMP \t\t\t\ntag 57\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 58\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 59\t\t\t\n  DUP5 \t\t\t\n  SLOAD \t\t\t\n  PUSH [tag] 38\t\t\t\n  JUMP \t\t\t\ntag 59\t\t\t\n  JUMPDEST \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 40\t\t\t\n  JUMP \t\t\t\ntag 58\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 20\t\t\t\n  PUSH 1F\t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  PUSH 1\t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 61\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 62\t\t\t\n  JUMPI \t\t\t\n  POP \t\t\t\n  DUP5 \t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\ntag 62\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  NOT \t\t\t\n  PUSH 3\t\t\t\n  DUP6 \t\t\t\n  SWAP1 \t\t\t\n  SHL \t\t\t\n  SHR \t\t\t\n  NOT \t\t\t\n  AND \t\t\t\n  PUSH 1\t\t\t\n  DUP5 \t\t\t\n  SWAP1 \t\t\t\n  SHL \t\t\t\n  OR \t\t\t\n  DUP5 \t\t\t\n  SSTORE \t\t\t\n  PUSH [tag] 53\t\t\t\n  JUMP \t\t\t\ntag 61\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t \n  DUP5 \t\t\t {\\r\\n        _m\n  DUP2 \t\t\t {\\r\\n        _m\n  MSTORE \t\t\t {\\r\\n        _m\n  PUSH 20\t\t\t fun\n  DUP2 \t\t\t\\n    }\\r\\n\\r\\n    func\n  KECCAK256 \t\t\t\\n    }\\r\\n\\r\\n    func\n  PUSH 1F\t\t\t\n  NOT \t\t\t\n  DUP6 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\ntag 65\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 67\t\t\t\n  JUMPI \t\t\t\n  DUP8 \t\t\t\n  DUP6 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  DUP3 \t\t\t\n  SSTORE \t\t\t\n  PUSH 20\t\t\t\n  SWAP5 \t\t\t\n  DUP6 \t\t\t\n  ADD \t\t\t\n  SWAP5 \t\t\t\n  PUSH 1\t\t\t\n  SWAP1 \t\t\t\n  SWAP3 \t\t\t\n  ADD \t\t\t\n  SWAP2 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 65\t\t\t\n  JUMP \t\t\t\ntag 67\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  DUP5 \t\t\t\n  DUP3 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 68\t\t\t\n  JUMPI \t\t\t\n  DUP7 \t\t\t\n  DUP5 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  PUSH 0\t\t\t\n  NOT \t\t\t\n  PUSH 3\t\t\t\n  DUP8 \t\t\t\n  SWAP1 \t\t\t\n  SHL \t\t\t\n  PUSH F8\t\t\t\n  AND \t\t\t\n  SHR \t\t\t\n  NOT \t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  SSTORE \t\t\t\ntag 68\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 1\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  SHL \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 28\t\t\t\n  JUMPDEST \t\t\t\n  DUP1 \t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  DUP1 \t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 71\t\t\t\n  JUMPI \t\t\t\n  PUSH 4E487B71\t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  PUSH 0\t\t\t\n  MSTORE \t\t\t\n  PUSH 11\t\t\t\n  PUSH 4\t\t\t\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  PUSH 0\t\t\t\n  REVERT \t\t\t\ntag 71\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 42\t\t\t\n  JUMPDEST \t\t\t\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract KERRToken is ERC20, E...\n  DUP1 \t\t\tcontract KERRToken is ERC20, E...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract KERRToken is ERC20, E...\n  PUSH 0\t\t\tcontract KERRToken is ERC20, E...\n  CODECOPY \t\t\tcontract KERRToken is ERC20, E...\n  PUSH 0\t\t\tcontract KERRToken is ERC20, E...\n  RETURN \t\t\tcontract KERRToken is ERC20, E...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract KERRToken is ERC20, E...\n      PUSH 40\t\t\tcontract KERRToken is ERC20, E...\n      MSTORE \t\t\tcontract KERRToken is ERC20, E...\n      CALLVALUE \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      ISZERO \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 1\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 0\t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      REVERT \t\t\tcontract KERRToken is ERC20, E...\n    tag 1\t\t\tcontract KERRToken is ERC20, E...\n      JUMPDEST \t\t\tcontract KERRToken is ERC20, E...\n      POP \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 4\t\t\tcontract KERRToken is ERC20, E...\n      CALLDATASIZE \t\t\tcontract KERRToken is ERC20, E...\n      LT \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 2\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 0\t\t\tcontract KERRToken is ERC20, E...\n      CALLDATALOAD \t\t\tcontract KERRToken is ERC20, E...\n      PUSH E0\t\t\tcontract KERRToken is ERC20, E...\n      SHR \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 70A08231\t\t\tcontract KERRToken is ERC20, E...\n      GT \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 21\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 8DA5CB5B\t\t\tcontract KERRToken is ERC20, E...\n      GT \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 22\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 8DA5CB5B\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 16\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 95D89B41\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 17\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH A9059CBB\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 18\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH DD62ED3E\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 19\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH F2FDE38B\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 20\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 0\t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      REVERT \t\t\tcontract KERRToken is ERC20, E...\n    tag 22\t\t\tcontract KERRToken is ERC20, E...\n      JUMPDEST \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 70A08231\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 12\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 715018A6\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 13\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 79CC6790\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 14\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 81A4A6D8\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 15\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 0\t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      REVERT \t\t\tcontract KERRToken is ERC20, E...\n    tag 21\t\t\tcontract KERRToken is ERC20, E...\n      JUMPDEST \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 2FF2E9DC\t\t\tcontract KERRToken is ERC20, E...\n      GT \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 23\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 2FF2E9DC\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 7\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 313CE567\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 8\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 40C10F19\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 9\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 42966C68\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 10\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 59DC2DD2\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 11\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 0\t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      REVERT \t\t\tcontract KERRToken is ERC20, E...\n    tag 23\t\t\tcontract KERRToken is ERC20, E...\n      JUMPDEST \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 6FDDE03\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 3\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 95EA7B3\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 4\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 18160DDD\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 5\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 23B872DD\t\t\tcontract KERRToken is ERC20, E...\n      EQ \t\t\tcontract KERRToken is ERC20, E...\n      PUSH [tag] 6\t\t\tcontract KERRToken is ERC20, E...\n      JUMPI \t\t\tcontract KERRToken is ERC20, E...\n    tag 2\t\t\tcontract KERRToken is ERC20, E...\n      JUMPDEST \t\t\tcontract KERRToken is ERC20, E...\n      PUSH 0\t\t\tcontract KERRToken is ERC20, E...\n      DUP1 \t\t\tcontract KERRToken is ERC20, E...\n      REVERT \t\t\tcontract KERRToken is ERC20, E...\n    tag 3\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 24\t\t\t\n      PUSH [tag] 25\t\t\t\n      JUMP \t\t\t\n    tag 24\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 26\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 27\t\t\t\n      JUMP \t\t\t\n    tag 26\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 4\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 28\t\t\t\n      PUSH [tag] 29\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 30\t\t\t\n      JUMP \t\t\t\n    tag 29\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 31\t\t\t\n      JUMP \t\t\t\n    tag 28\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      ISZERO \t\t\t\n      ISZERO \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 26\t\t\t\n      JUMP \t\t\t\n    tag 5\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 2\t\t\t\n      SLOAD \t\t\t\n    tag 34\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 26\t\t\t\n      JUMP \t\t\t\n    tag 6\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 28\t\t\t\n      PUSH [tag] 39\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 40\t\t\t\n      JUMP \t\t\t\n    tag 39\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 41\t\t\t\n      JUMP \t\t\t\n    tag 7\t\t\tuint256 public constant INITIA...\n      JUMPDEST \t\t\tuint256 public constant INITIA...\n      PUSH [tag] 34\t\t\tuint256 public constant INITIA...\n      PUSH 33B2E3C9FD0803CE8000000\t\t\t1000000000 * 10 ** 18\n      DUP2 \t\t\tuint256 public constant INITIA...\n      JUMP \t\t\tuint256 public constant INITIA...\n    tag 8\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 12\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 26\t\t\t\n      JUMP \t\t\t\n    tag 9\t\t\tfunction mint(address to, uint...\n      JUMPDEST \t\t\tfunction mint(address to, uint...\n      PUSH [tag] 50\t\t\tfunction mint(address to, uint...\n      PUSH [tag] 51\t\t\tfunction mint(address to, uint...\n      CALLDATASIZE \t\t\tfunction mint(address to, uint...\n      PUSH 4\t\t\tfunction mint(address to, uint...\n      PUSH [tag] 30\t\t\tfunction mint(address to, uint...\n      JUMP \t\t\tfunction mint(address to, uint...\n    tag 51\t\t\tfunction mint(address to, uint...\n      JUMPDEST \t\t\tfunction mint(address to, uint...\n      PUSH [tag] 52\t\t\tfunction mint(address to, uint...\n      JUMP \t\t\tfunction mint(address to, uint...\n    tag 50\t\t\tfunction mint(address to, uint...\n      JUMPDEST \t\t\tfunction mint(address to, uint...\n      STOP \t\t\tfunction mint(address to, uint...\n    tag 10\t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      JUMPDEST \t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      PUSH [tag] 50\t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      PUSH [tag] 54\t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      CALLDATASIZE \t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      PUSH 4\t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      PUSH [tag] 55\t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      JUMP \t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n    tag 54\t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      JUMPDEST \t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      PUSH [tag] 56\t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      JUMP \t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n    tag 11\t\t\tfunction burnFromAccount(addre...\n      JUMPDEST \t\t\tfunction burnFromAccount(addre...\n      PUSH [tag] 50\t\t\tfunction burnFromAccount(addre...\n      PUSH [tag] 58\t\t\tfunction burnFromAccount(addre...\n      CALLDATASIZE \t\t\tfunction burnFromAccount(addre...\n      PUSH 4\t\t\tfunction burnFromAccount(addre...\n      PUSH [tag] 30\t\t\tfunction burnFromAccount(addre...\n      JUMP \t\t\tfunction burnFromAccount(addre...\n    tag 58\t\t\tfunction burnFromAccount(addre...\n      JUMPDEST \t\t\tfunction burnFromAccount(addre...\n      PUSH [tag] 59\t\t\tfunction burnFromAccount(addre...\n      JUMP \t\t\tfunction burnFromAccount(addre...\n    tag 12\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 34\t\t\t\n      PUSH [tag] 61\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 62\t\t\t\n      JUMP \t\t\t\n    tag 61\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 13\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 50\t\t\t\n      PUSH [tag] 66\t\t\t\n      JUMP \t\t\t\n    tag 14\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 50\t\t\t\n      PUSH [tag] 68\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 30\t\t\t\n      JUMP \t\t\t\n    tag 68\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 69\t\t\t\n      JUMP \t\t\t\n    tag 15\t\t\tfunction getInitialSupply() pu...\n      JUMPDEST \t\t\tfunction getInitialSupply() pu...\n      PUSH 33B2E3C9FD0803CE8000000\t\t\t1000000000 * 10 ** 18\n      PUSH [tag] 34\t\t\tfunction getInitialSupply() pu...\n      JUMP \t\t\tfunction getInitialSupply() pu...\n    tag 16\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 26\t\t\t\n      JUMP \t\t\t\n    tag 17\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 24\t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP \t\t\t\n    tag 18\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 28\t\t\t\n      PUSH [tag] 81\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 30\t\t\t\n      JUMP \t\t\t\n    tag 81\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 82\t\t\t\n      JUMP \t\t\t\n    tag 19\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 34\t\t\t\n      PUSH [tag] 85\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 86\t\t\t\n      JUMP \t\t\t\n    tag 85\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP5 \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 20\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 50\t\t\t\n      PUSH [tag] 90\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 62\t\t\t\n      JUMP \t\t\t\n    tag 90\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 91\t\t\t\n      JUMP \t\t\t\n    tag 25\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      PUSH 3\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 93\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 94\t\t\t\n      JUMP \t\t\t\n    tag 93\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 95\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 94\t\t\t\n      JUMP \t\t\t\n    tag 95\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 96\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      LT \t\t\t\n      PUSH [tag] 97\t\t\t\n      JUMPI \t\t\t\n      PUSH 100\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SLOAD \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      PUSH [tag] 96\t\t\t\n      JUMP \t\t\t\n    tag 97\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SWAP1 \t\t\t\n    tag 98\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      GT \t\t\t\n      PUSH [tag] 98\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH 1F\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n    tag 96\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 31\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      CALLER \t\t\t, amount);\n      PUSH [tag] 102\t\t\t\n      DUP2 \t\t\t, amount);\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 103\t\t\t\n      JUMP \t\t\t\n    tag 102\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n    tag 99\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 41\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      CALLER \t\t\t, amount);\n      PUSH [tag] 107\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t, amount);\n      DUP6 \t\t\t\n      PUSH [tag] 108\t\t\t\n      JUMP \t\t\t\n    tag 107\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 109\t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 110\t\t\t\n      JUMP \t\t\t\n    tag 109\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      SWAP5 \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 52\t\t\tfunction mint(address to, uint...\n      JUMPDEST \t\t\tfunction mint(address to, uint...\n      PUSH [tag] 113\t\t\t\n      PUSH [tag] 114\t\t\t\n      JUMP \t\t\t\n    tag 113\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 116\t\t\t_mint(to, amount)\n      DUP3 \t\t\tto\n      DUP3 \t\t\tamount\n      PUSH [tag] 117\t\t\t_mint\n      JUMP \t\t\t_mint(to, amount)\n    tag 116\t\t\t_mint(to, amount)\n      JUMPDEST \t\t\t_mint(to, amount)\n      POP \t\t\tfunction mint(address to, uint...\n      POP \t\t\tfunction mint(address to, uint...\n      JUMP \t\t\tfunction mint(address to, uint...\n    tag 56\t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      JUMPDEST \t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      PUSH [tag] 119\t\t\tss from, uint256 amount) p\n      CALLER \t\t\t, amount);\n      DUP3 \t\t\tunt) \n      PUSH [tag] 121\t\t\tss fr\n      JUMP \t\t\tss from, uint256 amount) p\n    tag 119\t\t\tss from, uint256 amount) p\n      JUMPDEST \t\t\tss from, uint256 amount) p\n      POP \t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n      JUMP \t\t\t amount);\\r\\n    }\\r\\n\\r\\n    ...\n    tag 59\t\t\tfunction burnFromAccount(addre...\n      JUMPDEST \t\t\tfunction burnFromAccount(addre...\n      PUSH [tag] 123\t\t\t\n      PUSH [tag] 114\t\t\t\n      JUMP \t\t\t\n    tag 123\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 116\t\t\t_burn(from, amount)\n      DUP3 \t\t\tfrom\n      DUP3 \t\t\tamount\n      PUSH [tag] 121\t\t\t_burn\n      JUMP \t\t\t_burn(from, amount)\n    tag 66\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 128\t\t\t\n      PUSH [tag] 114\t\t\t\n      JUMP \t\t\t\n    tag 128\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 130\t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 131\t\t\t\n      JUMP \t\t\t\n    tag 130\t\t\t\n      JUMPDEST \t\t\t\n      JUMP \t\t\t\n    tag 69\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 123\t\t\t\n      DUP3 \t\t\t\n      CALLER \t\t\t, amount);\n      DUP4 \t\t\t\n      PUSH [tag] 108\t\t\t\n      JUMP \t\t\t\n    tag 78\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 93\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 94\t\t\t\n      JUMP \t\t\t\n    tag 82\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      CALLER \t\t\t, amount);\n      PUSH [tag] 102\t\t\t\n      DUP2 \t\t\t, amount);\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 110\t\t\t\n      JUMP \t\t\t\n    tag 91\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 149\t\t\t\n      PUSH [tag] 114\t\t\t\n      JUMP \t\t\t\n    tag 149\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 151\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1E4FBDF7\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n    tag 152\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 151\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 119\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 131\t\t\t\n      JUMP \t\t\t\n    tag 103\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 156\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH 1\t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMP \t\t\t\n    tag 156\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 108\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      DUP7 \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 164\t\t\t\n      JUMPI \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 161\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 7DC7A0D9\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP5 \t\t\t\n      AND \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 44\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 152\t\t\t\n      JUMP \t\t\t\n    tag 161\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 164\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMP \t\t\t\n    tag 164\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 110\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 166\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 4B637E8F\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 152\t\t\t\n      JUMP \t\t\t\n    tag 166\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 168\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH EC442F05\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 152\t\t\t\n      JUMP \t\t\t\n    tag 168\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 156\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 171\t\t\t\n      JUMP \t\t\t\n    tag 114\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t, amount);\n      EQ \t\t\t\n      PUSH [tag] 130\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 118CDAA7\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      CALLER \t\t\t, amount);\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 152\t\t\t\n      JUMP \t\t\t\n    tag 117\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 179\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH EC442F05\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 152\t\t\t\n      JUMP \t\t\t\n    tag 179\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 116\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 171\t\t\t\n      JUMP \t\t\t\n    tag 121\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 183\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 4B637E8F\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 152\t\t\t\n      JUMP \t\t\t\n    tag 183\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 116\t\t\t\n      DUP3 \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 171\t\t\t\n      JUMP \t\t\t\n    tag 131\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      SSTORE \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 157\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP5 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 188\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH E602DF05\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 152\t\t\t\n      JUMP \t\t\t\n    tag 188\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 190\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 4A1406B1\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 152\t\t\t\n      JUMP \t\t\t\n    tag 190\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP1 \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 164\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925\t\t\t\n      DUP5 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 193\t\t\t\n      SWAP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 193\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 171\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 195\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 2\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 196\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 197\t\t\t\n      JUMP \t\t\t\n    tag 196\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      PUSH [tag] 198\t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 195\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 199\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 391434E3\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 44\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 152\t\t\t\n      JUMP \t\t\t\n    tag 199\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP5 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n    tag 198\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 201\t\t\t\n      JUMPI \t\t\t\n      PUSH 2\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 202\t\t\t\n      JUMP \t\t\t\n    tag 201\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n    tag 202\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 203\t\t\t\n      SWAP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 203\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 27\t\t\te-Identifier: MIT\\r\\npragma so...\n      JUMPDEST \t\t\te-Identifier: MIT\\r\\npragma so...\n      PUSH 20\t\t\txt\n      DUP2 \t\t\tken/ERC20\n      MSTORE \t\t\tacts/token/ERC20/exte\n      PUSH 0\t\t\t@ope\n      DUP3 \t\t\tmport \n      MLOAD \t\t\tl\";\\r\\nimport \"\n      DUP1 \t\t\tle.sol\n      PUSH 20\t\t\tOw\n      DUP5 \t\t\tcts/acces\n      ADD \t\t\tntracts/access/Own\n      MSTORE \t\t\telin/contracts/access/Ownable....\n      PUSH 0\t\t\tT\n    tag 207\t\t\tRC20, ERC20Burnable, Ownable {...\n      JUMPDEST \t\t\tRC20, ERC20Burnable, Ownable {...\n      DUP2 \t\t\tnable,\n      DUP2 \t\t\tB\n      LT \t\t\tC20Burnable, \n      ISZERO \t\t\tRC20, ERC20Burnable, Ownable {...\n      PUSH [tag] 209\t\t\tRC20, ERC20Burnable, Ownable {...\n      JUMPI \t\t\tRC20, ERC20Burnable, Ownable {...\n      PUSH 20\t\t\t 1\n      DUP2 \t\t\tlion tokens wi\n      DUP7 \t\t\tlion tokens wi\n      ADD \t\t\tlion tokens wi\n      DUP2 \t\t\t billion tokens with 18\n      ADD \t\t\t billion tokens with 18\n      MLOAD \t\t\t  // 1 billion tokens with 18 \n      PUSH 40\t\t\t* \n      DUP7 \t\t\t= 1000000000 * 10\n      DUP5 \t\t\t= 1000000000 * 10\n      ADD \t\t\t= 1000000000 * 10\n      ADD \t\t\tPLY = 1000000000 * 10 ** 1\n      MSTORE \t\t\tIAL_SUPPLY = 1000000000 * 10 *...\n      ADD \t\t\t{\\r\\n    uin\n      PUSH [tag] 207\t\t\tRC20, ERC20Burnable, Ownable {...\n      JUMP \t\t\tRC20, ERC20Burnable, Ownable {...\n    tag 209\t\t\tRC20, ERC20Burnable, Ownable {...\n      JUMPDEST \t\t\tRC20, ERC20Burnable, Ownable {...\n      POP \t\t\t, E\n      PUSH 0\t\t\ta\n      PUSH 40\t\t\t) \n      DUP3 \t\t\t\", \"KE\n      DUP6 \t\t\t(\"KERRTok\n      ADD \t\t\tRC20(\"KERRToken\", \"KER\n      ADD \t\t\t() ERC20(\"KERRToken\", \"KERR\") ...\n      MSTORE \t\t\ttructor() ERC20(\"KERRToken\", \"...\n      PUSH 40\t\t\t\\n\\r\n      PUSH 1F\t\t\t\\n \n      NOT \t\t\tY);\\r\\n  \n      PUSH 1F\t\t\tSU\n      DUP4 \t\t\tINITIA\n      ADD \t\t\ter, INITIAL_SUP\n      AND \t\t\tsender, INITIAL_SUPPLY);\\r\\n  ...\n      DUP5 \t\t\t _mint(ms\n      ADD \t\t\t     _mint(msg.sender, INITIAL...\n      ADD \t\t\t\\n        _mint(msg.sender, IN...\n      SWAP2 \t\t\tnder) {\\r\\n        _mint(msg.s...\n      POP \t\t\tnder) {\\r\\n        _mint(msg.s...\n      POP \t\t\tnder) {\\r\\n        _mint(msg.s...\n      SWAP3 \t\t\te-Identifier: MIT\\r\\npragma so...\n      SWAP2 \t\t\te-Identifier: MIT\\r\\npragma so...\n      POP \t\t\te-Identifier: MIT\\r\\npragma so...\n      POP \t\t\te-Identifier: MIT\\r\\npragma so...\n      JUMP \t\t\te-Identifier: MIT\\r\\npragma so...\n    tag 204\t\t\tn mint(address to, uint256 amo...\n      JUMPDEST \t\t\tn mint(address to, uint256 amo...\n      DUP1 \t\t\t(to, amount);\\r\\n    }\n      CALLDATALOAD \t\t\t(to, amount);\\r\\n    }\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\tunt(address from, uint256 amou...\n      AND \t\t\tunt(address from, uint256 amou...\n      DUP2 \t\t\trnFromAccount(address from, ui...\n      EQ \t\t\trnFromAccount(address from, ui...\n      PUSH [tag] 211\t\t\tunction burnFromAccount(addres...\n      JUMPI \t\t\tunction burnFromAccount(addres...\n      PUSH 0\t\t\tw\n      DUP1 \t\t\tl\n      REVERT \t\t\tblic onlyOwn\n    tag 211\t\t\tunction burnFromAccount(addres...\n      JUMPDEST \t\t\tunction burnFromAccount(addres...\n      SWAP2 \t\t\tn mint(address to, uint256 amo...\n      SWAP1 \t\t\tn mint(address to, uint256 amo...\n      POP \t\t\tn mint(address to, uint256 amo...\n      JUMP \t\t\tn mint(address to, uint256 amo...\n    tag 30\t\t\t _burn(from, amount);\\r\\n    }...\n      JUMPDEST \t\t\t _burn(from, amount);\\r\\n    }...\n      PUSH 0\t\t\te decl\n      DUP1 \t\t\tation \n      PUSH 40\t\t\tre\n      DUP4 \t\t\t() public\n      DUP6 \t\t\tialSupp\n      SUB \t\t\tInitialSupply() public \n      SLT \t\t\t getInitialSupply() public pur...\n      ISZERO \t\t\tion getInitialSupply() public ...\n      PUSH [tag] 213\t\t\tion getInitialSupply() public ...\n      JUMPI \t\t\tion getInitialSupply() public ...\n      PUSH 0\t\t\t2\n      DUP1 \t\t\ti\n      REVERT \t\t\turns (uint25\n    tag 213\t\t\tion getInitialSupply() public ...\n      JUMPDEST \t\t\tion getInitialSupply() public ...\n      PUSH [tag] 214\t\t\tINITIAL_SUPPLY;\\r\\n    }\\r\\n}\n      DUP4 \t\t\t  }\\r\\n}\n      PUSH [tag] 204\t\t\tINITIAL_SUPPLY;\\r\\n    }\\r\\n}\n      JUMP \t\t\tINITIAL_SUPPLY;\\r\\n    }\\r\\n}\n    tag 214\t\t\tINITIAL_SUPPLY;\\r\\n    }\\r\\n}\n      JUMPDEST \t\t\tINITIAL_SUPPLY;\\r\\n    }\\r\\n}\n      SWAP5 \t\t\t   return INITIAL_SUPPLY;\\r\\n ...\n      PUSH 20\t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t _burn(from, amount);\\r\\n    }...\n    tag 40\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP5 \t\t\t\n      DUP7 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 218\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 218\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 219\t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 204\t\t\t\n      JUMP \t\t\t\n    tag 219\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 220\t\t\t\n      PUSH 20\t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 204\t\t\t\n      JUMP \t\t\t\n    tag 220\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP6 \t\t\t\n      SWAP3 \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 55\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 223\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 223\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 62\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 225\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 225\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 226\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 204\t\t\t\n      JUMP \t\t\t\n    tag 226\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 86\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 229\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 229\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 230\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 204\t\t\t\n      JUMP \t\t\t\n    tag 230\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 231\t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 204\t\t\t\n      JUMP \t\t\t\n    tag 231\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 94\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SHR \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 233\t\t\t\n      JUMPI \t\t\t\n      PUSH 7F\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 233\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 234\t\t\t\n      JUMPI \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 234\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 197\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 99\t\t\t\n      JUMPI \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    .data\n"
}